(module jazz.associative jazz
  (import (jazz.io))
  (import (jazz.pack))
  (import (jazz.settings))
  (import (jazz.time))
  (import (jazz.zlib))
  (import (time))
  (definition protected (fix-jas-settings))
  (definition public (jas-settings))
  (definition public (jas-init root (bare?: bare? (unspecified)) (open?: open? (unspecified))))
  (definition public (jas-open root))
  (definition public (jas-config-get repo key))
  (definition public (jas-config-set repo key value))
  (definition public (jas-staging-tree repo))
  (definition public (jas-commit repo author email message tree parent))
  (definition public (jas-discard repo (dirpath: dirpath (unspecified))))
  (definition public (jas-restore repo commit))
  (definition public (jas-reset repo commit))
  (definition public (jas-branches repo))
  (definition public (jas-checkout repo name (validate-clean?: validate-clean? (unspecified)) (create?: create? (unspecified))))
  (definition public (jas-read-head repo))
  (definition public (jas-require-head repo))
  (definition public (jas-add repo path))
  (definition public (jas-remove repo path))
  (definition public (jas-sync repo))
  (definition public (jas-head-index repo))
  (definition public (jas-working-index repo))
  (definition public (jas-staging-index repo))
  (definition public (jas-commit-index repo commit))
  (definition public (jas-staging-status repo))
  (definition public (jas-working-status repo (dirpath: dirpath (unspecified))))
  (definition public (jas-diff repo from to))
  (definition public (jas-commit? repo ref))
  (definition public (jas-branch? repo ref))
  (definition public (jas-branch-name repo ref))
  (definition public (jas-resolve repo ref))
  (definition public (jas-parse repo rev))
  (definition public (jas-retrieve repo digest))
  (definition public (jas-scan repo path))
  (definition public (jas-collect repo dry?))
  (definition ignored-toplevel-dirnames)
  (definition ignored-dirnames)
  (class Associative-Repository extends Object
    (slot working getter generate)
    (slot directory getter generate)
    (slot global-settings getter generate)
    (slot local-settings getter generate)
    (slot settings-list getter generate)
    (slot disregard getter generate)
    (slot ignore getter generate)
    (slot head getter generate)
    (slot index getter generate)
    (slot objects getter generate)
    (slot heads getter generate)
    (slot sets getter generate)
    (slot filters getter generate)
    (method override (initialize self root (init?: init? (unspecified)) (bare?: bare? (unspecified)) (open?: open? (unspecified)) (directory: directory (unspecified))))
    (method package (bare? self))
    (method package (open? self))
    (method package (init self bare? open?))
    (method (register-configs self))
    (method package (config-get self key))
    (method package (config-set self key value))
    (method (load-filters self))
    (method (objects-file self digest))
    (method (store-tree self tree))
    (method (store-content self content))
    (method package (store-file self file digest))
    (method package (store-blob self content digest extension))
    (method package (store-object self content digest))
    (method package (exists? self digest))
    (method package (retrieve self digest))
    (method package (retrieve-file self digest file flags (content (unspecified))))
    (method package (retrieve-blob self digest extension (content (unspecified))))
    (method package (retrieve-object self digest))
    (method package (collect-objects self dry?))
    (method package (staging-tree self))
    (method package (commit self author email message tree parent))
    (method (commit-tree self commit))
    (method (commit-parent self commit))
    (method package (discard self (dirpath: dirpath (unspecified)) (ignore-set?: ignore-set? (unspecified))))
    (method package (discarding-directories self proc))
    (method package (restore self commit))
    (method package (reset self commit))
    (method package (sync self))
    (method package (checkout self name (validate-clean?: validate-clean? (unspecified)) (create?: create? (unspecified))))
    (method (checkout-commit self commit))
    (method package (add-path self path))
    (method package (remove-path self path))
    (method (normalize-path self path))
    (method package (head-index self))
    (method package (working-index self (dirpath: dirpath (unspecified))))
    (method package (staging-index self (dirpath: dirpath (unspecified))))
    (method package (commit-index self commit))
    (method (tree->index self tree))
    (method package (scan self path))
    (method package (scan-file self path file (base: base (unspecified))))
    (method package (scan-blob self path content))
    (method package (scan-directory self dirpath dir (base: base (unspecified))))
    (method (scan-tree self tree))
    (method (index->tree self index))
    (method package (find-entry self path))
    (method (determine-set self path))
    (method package (diff self left-index right-index (ignore-set?: ignore-set? (unspecified))))
    (method package (diff-sets self remote-index local-index sets update-sets))
    (method package (diff-entries self left-entries right-entries (ignore-set?: ignore-set? (unspecified))))
    (method package (staging-status self))
    (method package (working-status self (dirpath: dirpath (unspecified)) (ignore-set?: ignore-set? (unspecified))))
    (method (write-head self ref))
    (method package (read-head self))
    (method package (require-head self))
    (method (write-branch self branch commit))
    (method (read-branch self name))
    (method (branch-file self name))
    (method (branches-directory self))
    (method (branch-exists? self name))
    (method package (branches self))
    (method package (commit? self ref))
    (method package (branch? self ref))
    (method (make-branch self name))
    (method package (branch-name self ref))
    (method package (resolve self ref))
    (method package (parse self rev)))
  (hub get-working)
  (hub get-directory)
  (hub get-global-settings)
  (hub get-local-settings)
  (hub get-settings-list)
  (hub get-disregard)
  (hub get-ignore)
  (hub get-head)
  (hub get-index)
  (hub get-objects)
  (hub get-heads)
  (hub get-sets)
  (hub get-filters)
  (hub bare?)
  (hub open?)
  (hub init)
  (hub register-configs)
  (hub config-get)
  (hub config-set)
  (hub load-filters)
  (hub objects-file)
  (hub store-tree)
  (hub store-content)
  (hub store-file)
  (hub store-blob)
  (hub store-object)
  (hub exists?)
  (hub retrieve)
  (hub retrieve-file)
  (hub retrieve-blob)
  (hub retrieve-object)
  (hub collect-objects)
  (hub staging-tree)
  (hub commit)
  (hub commit-tree)
  (hub commit-parent)
  (hub discard)
  (hub discarding-directories)
  (hub restore)
  (hub reset)
  (hub sync)
  (hub checkout)
  (hub checkout-commit)
  (hub add-path)
  (hub remove-path)
  (hub normalize-path)
  (hub head-index)
  (hub working-index)
  (hub staging-index)
  (hub commit-index)
  (hub tree->index)
  (hub scan)
  (hub scan-file)
  (hub scan-blob)
  (hub scan-directory)
  (hub scan-tree)
  (hub index->tree)
  (hub find-entry)
  (hub determine-set)
  (hub diff)
  (hub diff-sets)
  (hub diff-entries)
  (hub staging-status)
  (hub working-status)
  (hub write-head)
  (hub read-head)
  (hub require-head)
  (hub write-branch)
  (hub read-branch)
  (hub branch-file)
  (hub branches-directory)
  (hub branch-exists?)
  (hub branches)
  (hub commit?)
  (hub branch?)
  (hub make-branch)
  (hub branch-name)
  (hub resolve)
  (hub parse)
  (class Associative-Index extends Object
    (slot repository getter generate)
    (slot directory getter generate)
    (slot file getter generate)
    (slot paths getter generate)
    (slot entries getter generate)
    (method override (initialize self repository directory (file: file (unspecified)) (entries: entries (unspecified))))
    (method override (print self output readably))
    (method package (setup-entries self lst))
    (method package (setup-entries-preserving-live self lst))
    (method (load-from-file self))
    (method package (save-to-file self))
    (method (updating self path test proc))
    (method package (update self path path-type replace))
    (method package (update-changes self changes))
    (method package (entry-unchanged? self entry))
    (method package (add-file self path file))
    (method package (add-directory self path dir))
    (method package (remove-file self path))
    (method package (remove-directory self path))
    (method package (find-entry self path))
    (method package (iterate-subpaths self path proc))
    (method package (directory-index self dirpath)))
  (hub get-repository)
  (hub get-file)
  (hub get-paths)
  (hub get-entries)
  (hub setup-entries)
  (hub setup-entries-preserving-live)
  (hub load-from-file)
  (hub save-to-file)
  (hub updating)
  (hub update)
  (hub update-changes)
  (hub entry-unchanged?)
  (hub add-file)
  (hub add-directory)
  (hub remove-file)
  (hub remove-directory)
  (hub iterate-subpaths)
  (hub directory-index)
  (class Associative-Entry extends Object
    (slot path getter generate)
    (slot digest getter generate)
    (slot seconds getter generate)
    (slot flags getter generate)
    (slot set getter generate)
    (slot live? getter generate)
    (method override (initialize self path digest seconds flags set live?))
    (method override (print self output readably))
    (method override (copy-object self deep?))
    (method package (set-seconds self sec))
    (method package (set-live? self flag)))
  (hub get-path)
  (hub get-digest)
  (hub get-seconds)
  (hub get-flags)
  (hub get-set)
  (hub get-live?)
  (hub set-seconds)
  (hub set-live?)
  (definition protected (list->entry lst))
  (definition protected (list->entries lst))
  (definition protected (entry->list entry))
  (definition protected (entries->list entries))
  (class Associative-Diff extends Object
    (slot changes getter generate)
    (slot added getter generate)
    (slot modified getter generate)
    (slot removed getter generate)
    (method override (initialize self changes added modified removed))
    (method override (print self output readably))
    (method package (get-added/modified self)))
  (hub get-changes)
  (hub get-added)
  (hub get-modified)
  (hub get-removed)
  (hub get-added/modified)
  (class Associative-Filter extends Object
    (slot name getter generate)
    (slot conditions getter generate)
    (method override (initialize self name conditions))
    (method override (print self output readably))
    (method package (filter-path self path)))
  (hub get-name)
  (hub get-conditions)
  (hub filter-path)
  (definition protected (list->changes lst))
  (definition protected (changes->list changes))
  (definition package (scanning-directory dirpath dir proc (disregard: disregard (unspecified)) (ignore: ignore (unspecified)) (base: base (unspecified))))
  (definition Executable-Flag)
  (definition (determine-flags filename))
  (definition (set-permissions file flags))
  (definition protected (jas-exception format-string . rest))
  (definition protected (jas-exception-no-commits))
  (class Associative-Exception extends Exception
    (slot message)
    (method override (initialize self message))
    (method override (get-message self)))
  (definition public (jas-describe obj output (reverse? (unspecified)))))
