(module jazz.language.runtime jazz.dialect
  (import (irregex))
  (import (scheme.kernel))
  (import (jazz.language.loop (phase syntax)))
  (native private jazz:system-format)
  (class Object
    (method core chained (initialize self))
    (method core chained (destroy self))
    (method core public virtual (call-print self output detail))
    (method core virtual (print-object self output detail))
    (method core hidden virtual (tree-fold self down up here seed environment))
    (method public virtual (print self output detail))
    (method package (print-detail self output detail))
    (method package virtual (assemble self))
    (method public virtual (class-actions self))
    (method public virtual (focus-actions self))
    (method public virtual (guest-actions self))
    (method public virtual (hash-object self))
    (method package virtual (copy-object self deep?))
    (method package virtual (compare-object self object))
    (method package virtual (ci-compare-object self object))
    (method package virtual (di-compare-object self object))
    (method protected virtual (describe-object self output))
    (method public virtual (initialized? self))
    (method public virtual (close self))
    (method public virtual (destroying? self))
    (method public virtual (destroyed? self))
    (method public virtual (walk-references self proc))
    (method public virtual (setup-context self context))
    (method public virtual (get-sort-value self))
    (method package virtual (coerce-string self))
    (method package virtual (iterate-object self))
    (method protected virtual (marshall-size self))
    (method protected virtual (marshall-to self obj content))
    (method protected virtual (unmarshall-from self obj content))
    (method protected virtual (object-similar? self object))
    (method package virtual (object-alphabetic? self))
    (method package virtual (object-numeric? self))
    (method package virtual (object-alphanumeric? self))
    (method package virtual (object-whitespace? self))
    (method package virtual (object-upper-case? self))
    (method package virtual (object-lower-case? self))
    (method package virtual (object-upcase self))
    (method package virtual (object-downcase self))
    (method package virtual (object-capitalize self)))
  (hub initialize)
  (hub destroy)
  (hub call-print)
  (hub print-object)
  (hub print)
  (hub print-detail)
  (hub assemble)
  (hub class-actions)
  (hub focus-actions)
  (hub guest-actions)
  (hub hash-object)
  (hub copy-object)
  (hub compare-object)
  (hub ci-compare-object)
  (hub di-compare-object)
  (hub describe-object)
  (hub initialized?)
  (hub close)
  (hub destroying?)
  (hub destroyed?)
  (hub walk-references)
  (hub setup-context)
  (hub get-sort-value)
  (hub coerce-string)
  (hub iterate-object)
  (hub marshall-size)
  (hub marshall-to)
  (hub unmarshall-from)
  (hub object-similar?)
  (hub object-alphabetic?)
  (hub object-numeric?)
  (hub object-alphanumeric?)
  (hub object-whitespace?)
  (hub object-upper-case?)
  (hub object-lower-case?)
  (hub object-upcase)
  (hub object-downcase)
  (hub object-capitalize)
  (definition public (compare a <Object> b <Object>))
  (definition public (ci-compare a <Object> b <Object>))
  (definition public (di-compare a <Object> b <Object>))
  (definition public (copy obj <Object>))
  (definition public (subcopy obj <Object> deep? <bool>))
  (definition public (print-unreadable object <Object> output proc))
  (definition package (native-class name))
  (definition public (hash obj <Object>))
  (definition public track-leaks?)
  (definition protected leak-stack?)
  (definition protected leak-backtrace?)
  (definition protected leak-identifiers?)
  (definition protected leak-depth)
  (definition public *allocated* <table>)
  (definition public *double-freed* <table>)
  (definition public (leak-info))
  (definition public (allocated obj))
  (definition public (freed obj))
  (definition *leaks-mutex*)
  (definition *leaks*)
  (definition public (leaks))
  (definition (leaked obj info))
  (class Module extends Object
    (slot name getter generate)
    (slot access getter generate)
    (slot exports getter generate)
    (slot entries getter generate)
    (method override (print self output detail)))
  (hub get-name)
  (hub get-access)
  (hub get-exports)
  (hub get-entries)
  (class Field extends Object
    (slot name getter generate)
    (method override (print self output detail))
    (method package virtual abstract (field-locator self))
    (method package virtual abstract (field-ref self))
    (method package virtual abstract (field-set! self value)))
  (hub field-locator)
  (hub field-ref)
  (hub field-set!)
  (class Native extends Field
    (slot symbol getter generate)
    (method override (field-locator self))
    (method override (field-ref self))
    (method override (field-set! self value)))
  (hub get-symbol)
  (class Runtime-Reference extends Object
    (slot resolver getter generate)
    (slot serialization getter generate))
  (hub get-resolver)
  (hub get-serialization)
  (class Define extends Field
    (slot locator getter generate)
    (method override (field-locator self))
    (method override (field-ref self))
    (method override (field-set! self value)))
  (hub get-locator)
  (class Definition extends Field
    (slot locator getter generate)
    (method override (field-locator self))
    (method override (field-ref self))
    (method override (field-set! self value)))
  (class Type extends Object
    (method core virtual (of-type? self object))
    (method core virtual (of-subtype? self subtype))
    (method core virtual (specifiable? self))
    (method core virtual (category-type? self))
    (method core virtual (resolve-type self))
    (method core virtual (emit-specifier self))
    (method core virtual (emit-type self source-declaration environment))
    (method core virtual (emit-test self value source-declaration environment))
    (method core virtual (emit-cast self value source-declaration environment)))
  (hub of-type?)
  (hub of-subtype?)
  (hub specifiable?)
  (hub category-type?)
  (hub resolve-type)
  (hub emit-specifier)
  (hub emit-type)
  (hub emit-test)
  (hub emit-cast)
  (class Category extends Type
    (slot identifier getter generate)
    (slot fields getter generate)
    (slot virtual-size getter generate)
    (slot ancestors getter generate)
    (slot descendants getter generate)
    (method core virtual (update-category self))
    (method override (print self output detail))
    (method public (get-name self))
    (method public virtual (mop-category-field self field-name))
    (method public virtual (mop-field-value self property)))
  (hub get-identifier)
  (hub get-fields)
  (hub get-virtual-size)
  (hub get-ancestors)
  (hub get-descendants)
  (hub update-category)
  (hub mop-category-field)
  (hub mop-field-value)
  (definition public (typed? obj category-identifier))
  (class Class extends Category
    (slot ascendant getter generate)
    (slot interfaces getter generate)
    (slot slots getter generate)
    (slot instance-slots getter generate)
    (slot instance-size getter generate)
    (slot level getter generate)
    (slot virtual-names getter generate)
    (slot class-table getter generate)
    (slot interface-table getter generate)
    (slot user-data getter generate)
    (method public virtual (coerce-object self obj))
    (method public virtual (external-name self (error?: error? (unspecified))))
    (method public virtual (marshall-object self object))
    (method public virtual (unmarshall-object self content))
    (method public virtual (mop-instance-slots self object)))
  (hub get-ascendant)
  (hub get-interfaces)
  (hub get-slots)
  (hub get-instance-slots)
  (hub get-instance-size)
  (hub get-level)
  (hub get-virtual-names)
  (hub get-class-table)
  (hub get-interface-table)
  (hub get-user-data)
  (hub coerce-object)
  (hub external-name)
  (hub marshall-object)
  (hub unmarshall-object)
  (hub mop-instance-slots)
  (class Object-Class metaclass Class extends Class)
  (definition public (class? obj))
  (definition public (instance-of? obj class))
  (definition public (coerce object <Object> class <Class>))
  (class Interface extends Category
    (slot ascendants getter generate)
    (slot rank getter generate))
  (hub get-ascendants)
  (hub get-rank)
  (class Method extends Field
    (slot dispatch-type getter generate)
    (slot implementation getter generate)
    (slot implementation-tree getter generate)
    (slot category-rank getter generate)
    (slot implementation-rank getter generate))
  (hub get-dispatch-type)
  (hub get-implementation)
  (hub get-implementation-tree)
  (hub get-category-rank)
  (hub get-implementation-rank)
  (class Method-Node extends Object
    (slot category getter generate)
    (slot implementation getter generate)
    (slot next-node getter generate)
    (slot next-implementation getter generate)
    (slot children getter generate))
  (hub get-category)
  (hub get-next-node)
  (hub get-next-implementation)
  (hub get-children)
  (class Call-Site extends Object
    (slot name accessors generate)
    (slot id accessors generate)
    (slot properties accessors generate)
    (slot procedure accessors generate)
    (slot monitor accessors generate)
    (method override (print self output detail)))
  (hub set-name)
  (hub get-id)
  (hub set-id)
  (hub get-properties)
  (hub set-properties)
  (hub get-procedure)
  (hub set-procedure)
  (hub get-monitor)
  (hub set-monitor)
  (class Queue extends Object
    (slot head getter generate)
    (slot public tail getter generate)
    (slot shared getter generate))
  (hub get-head)
  (hub get-tail)
  (hub get-shared)
  (class Generic extends Object
    (slot locator getter generate)
    (slot name getter generate)
    (slot root-specific getter generate)
    (slot pending-specifics getter generate))
  (hub get-root-specific)
  (hub get-pending-specifics)
  (class Specific extends Object
    (slot dynamic-signature getter generate)
    (slot implementation getter generate)
    (slot ancestor-specifics getter generate)
    (slot descendant-specifics getter generate))
  (hub get-dynamic-signature)
  (hub get-ancestor-specifics)
  (hub get-descendant-specifics)
  (class Bool-Class extends Class)
  (class Bool metaclass Bool-Class extends Object
    (method override (initialize self . rest)))
  (class Boolean-Class extends Class)
  (class Boolean metaclass Boolean-Class extends Object
    (method override (initialize self . rest)))
  (definition public (/= x y))
  (definition public (neq? x y))
  (definition public (xor x y))
  (definition public (nu=? n m . rest))
  (definition public (nu/=? n m . rest))
  (definition public (nu<? n m . rest))
  (definition public (nu<=? n m . rest))
  (definition public (nu>? n m . rest))
  (definition public (nu>=? n m . rest))
  (definition public (ci=? . rest))
  (definition public (ci/=? . rest))
  (definition public (ci<? n . rest))
  (definition public (ci<=? n . rest))
  (definition public (ci>? n . rest))
  (definition public (ci>=? n . rest))
  (definition public (di=? x y))
  (definition public (di<? x y))
  (definition public (di<=? x y))
  (definition public (di>? x y))
  (definition public (di>=? x y))
  (definition public (di-sort-ascending seq (key: key (unspecified))))
  (definition public (di-sort-descending seq (key: key (unspecified))))
  (definition public (boolean->integer bool))
  (definition public (integer->boolean n <int>))
  (definition public false)
  (definition public (false? obj))
  (definition public true)
  (definition public (true? obj))
  (definition public (truth? obj))
  (definition public (boolean->truth bool))
  (definition public (truth->boolean data))
  (definition public Whitespace-Chars)
  (definition public Uppercase-Chars)
  (definition public Lowercase-Chars)
  (definition public Alphabetic-Chars)
  (definition public Numeric-Chars)
  (definition Uppercase-Lowerbound <fx>)
  (definition Uppercase-Upperbound <fx>)
  (definition Lowercase-Lowerbound <fx>)
  (definition Lowercase-Upperbound <fx>)
  (definition Numeric-Lowerbound <fx>)
  (definition Numeric-Upperbound <fx>)
  (definition Diacritic-Equivalences)
  (definition (make-diacritic-table equivalences) <table>)
  (definition Diacritic-Table <table>)
  (definition public (diacritic-equivalent c))
  (definition public (unicode->ascii str))
  (class Char-Class extends Class)
  (class Char metaclass Char-Class extends Object
    (method override (initialize self . rest))
    (method override (coerce-string self))
    (method override (compare-object self c))
    (method override (ci-compare-object self c))
    (method override (di-compare-object self c))
    (method override (object-similar? self object))
    (method override (object-alphabetic? self))
    (method override (object-numeric? self))
    (method override (object-alphanumeric? self))
    (method override (object-whitespace? self))
    (method override (object-upper-case? self))
    (method override (object-lower-case? self))
    (method override (object-upcase self))
    (method override (object-downcase self))
    (method override (object-capitalize self)))
  (definition whitechar?)
  (definition public (char-presentation char))
  (definition public (alphabetic? object <Object>))
  (definition public (numeric? object <Object>))
  (definition public (alphanumeric? object <Object>))
  (definition public (whitespace? object <Object>))
  (definition public (upper-case? object <Object>))
  (definition public (lower-case? object <Object>))
  (definition public (upcase object <Object>))
  (definition public (downcase object <Object>))
  (definition public (capitalize object <Object>))
  (definition public (upcase-capitalized str))
  (definition public (vowel? c))
  (definition public (ascii? c))
  (definition public (control-character? c))
  (definition character-types)
  (definition public (character-type ascii-c <char>) <symbol>)
  (definition public (invalid-character? c <char>) <bool>)
  (definition public (word-constituent? c <char>) <bool>)
  (definition public (scheme-constituent? c <char>) <bool>)
  (definition public (jazz-constituent? c <char>) <bool>)
  (definition public (c-constituent? c <char>) <bool>)
  (definition public (sql-constituent? c <char>) <bool>)
  (class Port-Class extends Class)
  (class Port metaclass Port-Class extends Object
    (method override (initialize self . rest))
    (method override (destroy self)))
  (class Symbol-Class extends Class)
  (class Symbol metaclass Symbol-Class extends Object
    (method override (initialize self . rest))
    (method override (coerce-string self))
    (method override (compare-object self obj))
    (method override (ci-compare-object self obj)))
  (definition public undocumented (=symbolsymbol s1 <symbol> s2 <symbol>) <bool>)
  (definition public (generated-symbol? symbol))
  (definition public (symbol->keyword symbol))
  (definition public (keyword->symbol keyword))
  (definition public (find-symbol str))
  (definition public (symbol-bound? name . rest))
  (definition public (symbol-unbound? name . rest))
  (class Keyword-Class extends Class)
  (class Keyword metaclass Keyword-Class extends Object
    (method override (initialize self . rest)))
  (definition public (find-keyword keyword box default (allow-other-keys? (unspecified))))
  (definition package (box-list lst))
  (definition package (unbox-list box))
  (class Continuation-Class extends Class)
  (class Continuation metaclass Continuation-Class extends Object)
  (class Procedure-Class extends Class)
  (class Procedure metaclass Procedure-Class extends Object)
  (class Foreign-Class extends Class)
  (class Foreign metaclass Foreign-Class extends Object)
  (class Numeric-Class extends Class)
  (class Numeric metaclass Numeric-Class extends Object
    (method public virtual abstract (numeric-norm self))
    (method public virtual abstract (numeric-add self obj))
    (method public virtual abstract (numeric-negate self))
    (method public virtual abstract (numeric-multiply self n))
    (method public virtual abstract (numeric-inverse self)))
  (hub numeric-norm)
  (hub numeric-add)
  (hub numeric-negate)
  (hub numeric-multiply)
  (hub numeric-inverse)
  (class Number-Class extends Numeric-Class)
  (class Number metaclass Number-Class extends Numeric
    (method override (initialize self . rest))
    (method override (compare-object self obj))
    (method override (ci-compare-object self obj))
    (method override (di-compare-object self obj))
    (method override (numeric-norm self))
    (method override (numeric-add self obj))
    (method override (numeric-negate self))
    (method override (numeric-multiply self obj))
    (method override (numeric-inverse self)))
  (class Complex-Class extends Number-Class)
  (class Complex metaclass Complex-Class extends Number
    (method override (numeric-norm self)))
  (class Real-Class extends Complex-Class)
  (class Real metaclass Real-Class extends Complex)
  (class Rational-Class extends Real-Class)
  (class Rational metaclass Rational-Class extends Real)
  (definition public (rational->decimalstring fraction precision))
  (class Integer-Class extends Rational-Class)
  (class Integer metaclass Integer-Class extends Rational)
  (class Fixnum-Class extends Integer-Class)
  (class Fixnum metaclass Fixnum-Class extends Integer)
  (class Ratnum-Class extends Rational-Class)
  (class Ratnum metaclass Ratnum-Class extends Rational)
  (class Flonum-Class extends Real-Class)
  (class Flonum metaclass Flonum-Class extends Real)
  (definition public (fl x) <fl>)
  (definition public (flmodulo x <fl> y <fl>) <fl>)
  (definition public (flsign x <fv>) <fl>)
  (class Flovec-Class extends Flonum-Class)
  (class Flovec metaclass Flovec-Class extends Flonum)
  (class S64-Class extends Integer-Class)
  (class S64 metaclass S64-Class extends Integer)
  (definition public (relate x y) <fx>)
  (definition public (sign n) <fx>)
  (definition public (nu+ . rest))
  (definition public (nu- n <Numeric> . rest))
  (definition public (nu* . rest))
  (definition public (nu/ n <Numeric> . rest))
  (definition public (minimum lst <pair> (key: key (unspecified)) (compare: compare (unspecified))))
  (definition public (maximum lst <pair> (key: key (unspecified)) (compare: compare (unspecified))))
  (definition public (between? n lower upper))
  (definition public (between lower n upper))
  (definition public (in-interval? n lower upper))
  (definition public (between-interval lower n upper))
  (definition public (norm x <Numeric>))
  (definition public (distance start <Numeric> end <Numeric>))
  (definition public (near? x y distance) <bool>)
  (definition public (contiguous-range lst))
  (definition public (naturals lower <int> upper <int>) <list>)
  (definition public (interval lower <int> upper <int>) <list>)
  (definition public (lobyte word <int>) <int>)
  (definition public (hibyte word <int>) <int>)
  (definition public (make-word lo <int> hi <int>) <int>)
  (definition public (lochar word <int>) <int>)
  (definition public (hichar word <int>) <int>)
  (definition public (make-int lo <int> hi <int>) <int>)
  (definition public (loword dword <int>) <int>)
  (definition public (hiword dword <int>) <int>)
  (definition public (signed-loword dword <int>) <int>)
  (definition public (signed-hiword dword <int>) <int>)
  (definition public (sign-word word <int>) <int>)
  (definition public (separate int1 <int> int2 <int>))
  (definition public (randomize))
  (definition public (random n))
  (definition public (bit-set num <int> pos <int> bit <bool>) <int>)
  (definition public (mask-bit-set num <int> msk <int> bit <bool>) <int>)
  (definition public (mask-bit-set? num <int> msk <int>) <bool>)
  (definition public (bit-mask hi <int> lo <int>))
  (definition public (random-seed (seed (unspecified))))
  (definition public (sqr num))
  (definition public (percentage part <real> total <real>) <real>)
  (definition public (percent percent <real> n <real>) <real>)
  (definition public (fxfloor r <fl>) <fx>)
  (definition public (fxceiling r <fl>) <fx>)
  (definition public (fxtruncate r <fl>) <fx>)
  (definition public (fxround r <fl>) <fx>)
  (definition public (fxfloor/ n <fx> d <fx>) <fx>)
  (definition public (fxceiling/ n <fx> d <fx>) <fx>)
  (definition public (fxtruncate/ n <fx> d <fx>) <fx>)
  (definition public (fxround/ n <fx> d <fx>) <fx>)
  (definition public (quotient/ x <fx> y <fx>) <fx>)
  (class Iterator extends Object
    (definition Empty)
    (slot peeked)
    (method override (iterate-object self))
    (method public virtual (get-next self))
    (method public virtual (peek self))
    (method public virtual (unget self object))
    (method public virtual (next self))
    (method public virtual (done? self) <bool>)
    (method public virtual (get-next! self))
    (method public virtual (put self object))
    (method public virtual (get-position self))
    (method public virtual (set-position self pos))
    (method public virtual (get-state self))
    (method public virtual (reset-state self old)))
  (hub get-next)
  (hub peek)
  (hub unget)
  (hub next)
  (hub done?)
  (hub get-next!)
  (hub put)
  (hub get-position)
  (hub set-position)
  (hub get-state)
  (hub reset-state)
  (definition public (iterator obj <Object>) <Iterator>)
  (class Explorer extends Iterator
    (slot direction setter generate)
    (method protected virtual (peek-forward self))
    (method protected virtual (peek-backward self))
    (method override (peek self))
    (method public virtual (goto-beginning self))
    (method public virtual (goto-end self))
    (method public virtual (forward self))
    (method public virtual (backward self))
    (method override (next self))
    (method protected virtual (done-forward? self))
    (method protected virtual (done-backward? self))
    (method override (done? self))
    (method protected virtual (put-forward self object))
    (method protected virtual (put-backward self object))
    (method override (put self object)))
  (hub set-direction)
  (hub peek-forward)
  (hub peek-backward)
  (hub goto-beginning)
  (hub goto-end)
  (hub forward)
  (hub backward)
  (hub done-forward?)
  (hub done-backward?)
  (hub put-forward)
  (hub put-backward)
  (definition public (explore object <Object> . rest) <Explorer>)
  (definition (coerce-sequence seq class))
  (class Sequence-Class extends Class
    (method public virtual abstract (make-sequence self len <int>))
    (method override (coerce-object self seq)))
  (hub make-sequence)
  (class Sequence metaclass Sequence-Class extends Object
    (method override (coerce-string self))
    (method override (compare-object self seq))
    (method override (di-compare-object self seq))
    (method override (copy-object self deep? <bool>))
    (method override (iterate-object self))
    (method override (object-alphabetic? self))
    (method override (object-numeric? self))
    (method override (object-alphanumeric? self))
    (method override (object-whitespace? self))
    (method override (object-upper-case? self))
    (method override (object-lower-case? self))
    (method override (object-upcase self))
    (method override (object-downcase self))
    (method override (object-capitalize self))
    (method package virtual abstract (sequence-element self n <fx>) <any>)
    (method package virtual abstract (sequence-set-element! self n <fx> obj <any>) <void>)
    (method package virtual abstract (sequence-cardinality self) <fx>)
    (method package virtual abstract (sequence-tail self start))
    (method package virtual abstract (sequence-last self))
    (method package virtual abstract (sequence-butlast self))
    (method package virtual (sequence-subseq! self start <fx> end <fx>))
    (method package virtual (sequence-replace-subseq! self start <fx> end <fx> replacement))
    (method public (empty? self))
    (method public (laden? self)))
  (hub sequence-element)
  (hub sequence-set-element!)
  (hub sequence-cardinality)
  (hub sequence-tail)
  (hub sequence-last)
  (hub sequence-butlast)
  (hub sequence-subseq!)
  (hub sequence-replace-subseq!)
  (hub empty?)
  (hub laden?)
  (definition public (sequence? obj))
  (definition public (element seq <Sequence> n <int>) <any>)
  (definition public (set-element! seq <Sequence> n <int> obj <any>) <void>)
  (definition public (cardinality seq <Sequence>) <int>)
  (definition public (tail seq <Sequence> start))
  (definition public (last seq <Sequence>))
  (definition public (butlast seq <Sequence>))
  (definition public (compare-sequence s1 s2 compare))
  (definition public (skip-whitespace seq <Sequence> (start: start (unspecified))))
  (definition public (subseq seq start (end (unspecified)) (type (unspecified))))
  (definition public (replace-subseq! seq <Sequence> start end replacement))
  (definition public (subseq! seq <Sequence> start (end (unspecified))) <Sequence>)
  (definition public (sort test seq (key: key (unspecified))))
  (definition public (sort-vector! test vec))
  (definition public (first seq))
  (definition public (second seq))
  (definition public (third seq))
  (definition public (fourth seq))
  (definition public (fifth seq))
  (definition public (sixth seq))
  (definition public (seventh seq))
  (definition public (eighth seq))
  (definition public (ninth seq))
  (definition public (tenth seq))
  (definition public (set-first! seq value))
  (definition public (set-second! seq value))
  (definition public (set-third! seq value))
  (definition public (set-fourth! seq value))
  (definition public (set-fifth! seq value))
  (definition public (set-sixth! seq value))
  (definition public (set-seventh! seq value))
  (definition public (set-eighth! seq value))
  (definition public (set-ninth! seq value))
  (definition public (set-tenth! seq value))
  (definition public (element-reversed seq n))
  (definition public (iterate seq proc <procedure>))
  (definition public (iterate-sequences proc <procedure> . seqs))
  (definition public (accumulate seq proc <procedure> (type (unspecified))))
  (definition protected (apply-key key <Object> object <Object>))
  (definition protected (apply-test test <Object> x <Object> y <Object>))
  (definition public (gather iterable <Object> (type: type (unspecified))))
  (definition public (collect proc <procedure> seq <Object> (key: key (unspecified)) (type: type (unspecified))))
  (definition public (collect-if predicate <procedure> seq <Object> (key: key (unspecified))))
  (definition public (collect-type type seq <Object> (key: key (unspecified))))
  (definition public (collect-sections lst (separator: separator (unspecified)) (test: test (unspecified))))
  (definition public (count target <Object> seq <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (count-if predicate <procedure> seq (key: key (unspecified))))
  (definition public (count-type type seq <Object> (key: key (unspecified))))
  (definition public (sum proc <procedure> lst))
  (definition public (average seq))
  (definition public (find seq target (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (reversed?: reversed? (unspecified)) (return: return (unspecified))))
  (definition public (find-rank target <Object> seq <Object> (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (reversed?: reversed? (unspecified))))
  (definition (list-find list target key test start return))
  (definition public (find-in seq target (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (reversed?: reversed? (unspecified))))
  (definition public (find-balanced open close seq (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (reversed?: reversed? (unspecified)) (return: return (unspecified))))
  (definition public (find-if predicate <procedure> seq <Object> (key: key (unspecified)) (start: start (unspecified)) (reversed?: reversed? (unspecified)) (return: return (unspecified))))
  (definition public (skip predicate <procedure> seq <Object> (key: key (unspecified)) (start: start (unspecified)) (reversed?: reversed? (unspecified))))
  (definition public (append-map proc <procedure> list1 . lists))
  (definition public (zip list1 . lists))
  (definition public (iota count (start (unspecified)) (step (unspecified))))
  (definition public (fold-left kcons knil lst))
  (definition public (fold-right kcons knil lst))
  (definition public (unfold-right stop? <procedure> seed->elem <procedure> next <procedure> seed (tail (unspecified))))
  (definition public (some? predicate <procedure> (key: key (unspecified)) . seqs))
  (definition public (every? predicate <procedure> (key: key (unspecified)) . seqs))
  (definition public (concatenate . rest))
  (definition public (concatenate! . rest))
  (definition public (subset? set1 set2))
  (definition public (union (key: key (unspecified)) (test: test (unspecified)) . lists))
  (definition public (intersection (key: key (unspecified)) (test: test (unspecified)) . lists))
  (definition public (difference x <Object> y <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (set-xor x <Object> y <Object> (test: test (unspecified))))
  (definition public (remove target <Object> seq <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public undocumented onsite (string-remove target <char> str <string>) <string>)
  (definition public (extract-trailer seq <Object> predicate <procedure>))
  (definition public (remove-leading target <Object> seq <Object> (test: test (unspecified))))
  (definition public (remove-trailing target <Object> seq <Object> (test: test (unspecified))))
  (definition public (remove-enclosing target <Object> seq <Object> (test: test (unspecified))))
  (definition public (remove-duplicates seq <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (collect-duplicates seq <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (remove-false seq <Object>))
  (definition public (remove-empty seq <Object>))
  (definition public (trim-spaces seq))
  (definition public (trim-whitespace seq))
  (definition public (trim-leading-whitespace seq))
  (definition public (trim-trailing-whitespace seq))
  (definition public (trim-inner-whitespace str))
  (definition public (mismatch target <Object> seq <Object> (test: test (unspecified))))
  (definition public (prefix sequences <Object> (test: test (unspecified))))
  (definition public (prefix? target <Object> seq <Object>))
  (definition public (copy-into! seq1 seq2))
  (class Search-Context extends Object
    (slot target <Sequence> accessors generate)
    (slot whole-words? <bool> accessors generate)
    (slot ignore-case? <bool> accessors generate)
    (slot ignore-diacritic? <bool> accessors generate)
    (slot regexp? <bool> accessors generate)
    (slot match-test <procedure+> accessors generate)
    (slot constituent-test <procedure+> accessors generate)
    (slot regexp <any> accessors generate)
    (slot user-data <any> accessors generate)
    (method override (print self output detail)))
  (hub get-target)
  (hub set-target)
  (hub get-whole-words?)
  (hub set-whole-words?)
  (hub get-ignore-case?)
  (hub set-ignore-case?)
  (hub get-ignore-diacritic?)
  (hub set-ignore-diacritic?)
  (hub get-regexp?)
  (hub set-regexp?)
  (hub get-match-test)
  (hub set-match-test)
  (hub get-constituent-test)
  (hub set-constituent-test)
  (hub get-regexp)
  (hub set-regexp)
  (hub set-user-data)
  (class Search-Set extends Object
    (slot regexp <any> accessors generate)
    (slot contexts <list> accessors generate))
  (hub get-contexts)
  (hub set-contexts)
  (definition public (->search-context obj))
  (definition public (make-search-context target (whole-words?: whole-words? (unspecified)) (ignore-case?: ignore-case? (unspecified)) (ignore-diacritic?: ignore-diacritic? (unspecified)) (regexp?: regexp? (unspecified)) (match-test: match-test (unspecified)) (constituent-test: constituent-test (unspecified)) (user-data: user-data (unspecified))))
  (definition (allocate-search-context target whole-words? ignore-case? ignore-diacritic? regexp? match-test constituent-test user-data))
  (definition public (->search-set obj) <Search-Set>)
  (definition public (allocate-search-set regexp contexts))
  (definition (->diacritic-ignoring-sre string))
  (definition (search-context->sre context <Search-Context>))
  (definition public (search-context-regexp context <Search-Context>))
  (definition (regular-search-impl seq <Sequence> target <any> match-test <procedure+> constituent-test <procedure+> start <fx+> end <fx+> reversed? <bool>))
  (definition public (regular-search seq <Sequence> target <any> (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified)) (match-test: match-test (unspecified)) (constituent-test: constituent-test (unspecified))))
  (definition public (regular-search-all seq <Sequence> target <any> (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified)) (match-test: match-test (unspecified)) (constituent-test: constituent-test (unspecified))))
  (definition public (search seq <Sequence> target <Object> (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified)) (whole-words?: whole-words? (unspecified)) (ignore-case?: ignore-case? (unspecified)) (ignore-diacritic?: ignore-diacritic? (unspecified)) (regexp?: regexp? (unspecified)) (match-test: match-test (unspecified)) (constituent-test: constituent-test (unspecified))) <int+>)
  (definition public (search-all seq <Sequence> target <Object> (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified)) (whole-words?: whole-words? (unspecified)) (ignore-case?: ignore-case? (unspecified)) (ignore-diacritic?: ignore-diacritic? (unspecified)) (regexp?: regexp? (unspecified)) (match-test: match-test (unspecified)) (constituent-test: constituent-test (unspecified))) <list>)
  (definition public (split seq <Object> separator <Object>) <list>)
  (definition public (split-justified seq <Object> width separators <Object> (column: column (unspecified))))
  (definition public (join sequences <Object> separator <Object>))
  (definition public (join-symbols symbols separator))
  (definition public (inject sequence inserted))
  (definition public (substitute old-value <Object> new-value <Object> seq <Object> (key: key (unspecified)) (test: test (unspecified)) (sequence?: sequence? (unspecified))))
  (definition public (substitute-alist replacements <Object> seq <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (substitute-string str old new))
  (definition public (fill! seq object (start: start (unspecified))))
  (definition public (replace! seq replacement (start: start (unspecified))))
  (definition public (ordered-position object seq (key: key (unspecified)) (test: test (unspecified))))
  (definition public (insert-ordered! object seq (key: key (unspecified)) (test: test (unspecified))))
  (definition global-compare)
  (definition global-ci-compare)
  (definition public (merge-ordered proc x y (key: key (unspecified)) (left-key: left-key (unspecified)) (right-key: right-key (unspecified)) (compare: compare (unspecified)) (case-insensitive?: case-insensitive? (unspecified))))
  (definition public (merge proc lists (key: key (unspecified)) (compare: compare (unspecified))))
  (definition public (next-element seq elem (key: key (unspecified)) (test: test (unspecified)) (cycle?: cycle? (unspecified))))
  (definition public (previous-element seq elem (key: key (unspecified)) (test: test (unspecified)) (cycle?: cycle? (unspecified))))
  (definition public (cycle-element seq elem (key: key (unspecified)) (test: test (unspecified)) (cycle?: cycle? (unspecified)) (reversed?: reversed? (unspecified))))
  (definition public (random-element seq))
  (definition public (random-sequence seq))
  (definition public (partition sequence (key: key (unspecified)) (test: test (unspecified))))
  (definition public (partition-binary lst predicate))
  (definition public (starts-with? seq target (test: test (unspecified)) (ignore-case?: ignore-case? (unspecified))) <bool>)
  (definition public (ends-with? seq target (test: test (unspecified)) (ignore-case?: ignore-case? (unspecified))) <bool>)
  (definition public (for-each-reversed proc lst))
  (definition (find-if-list predicate list key start returned))
  (definition public (insert-sequence! sequence pos seq))
  (class Sequence-Explorer extends Explorer
    (slot sequence <Sequence>)
    (slot public sequence-cardinality <fx>)
    (slot current <fx>)
    (method override (initialize self seq (direction: direction (unspecified)) (start: start (unspecified))))
    (method override (peek-forward self))
    (method override (peek-backward self))
    (method override (goto-beginning self))
    (method override (goto-end self))
    (method override (forward self))
    (method override (backward self))
    (method override (done-forward? self))
    (method override (done-backward? self))
    (method override (put-forward self object <Object>))
    (method override (put-backward self object <Object>))
    (method override (get-position self))
    (method override (set-position self pos <fx>))
    (method override (get-state self))
    (method override (reset-state self state <fx>)))
  (class List-Class extends Sequence-Class
    (method override (make-sequence self len))
    (method override (coerce-object self seq)))
  (class List metaclass List-Class extends Sequence
    (method override (initialize self . rest))
    (method override (copy-object self deep?))
    (method override (iterate-object self))
    (method override (sequence-element self n) <any>)
    (method override (sequence-set-element! self n <fx> obj <any>) <void>)
    (method override (sequence-cardinality self) <fx>)
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self))
    (method override (sequence-subseq! self start end))
    (method hidden (replace-subseq! self start end seq)))
  (class Null-Class extends List-Class)
  (class Null metaclass Null-Class extends List
    (method override (compare-object self obj))
    (method override (di-compare-object self obj)))
  (class Pair-Class extends List-Class)
  (class Pair metaclass Pair-Class extends List
    (method override (compare-object self obj))
    (method override (di-compare-object self obj))
    (method override (walk-references self proc))
    (method override (setup-context self context)))
  (definition public undocumented (elementlist list <list> n) <any>)
  (definition public undocumented (cardinalitylist list <list>) <int>)
  (definition public (insert! seq pos obj))
  (definition public (atom? value))
  (definition public (null/pair? obj))
  (definition public (one-element? obj))
  (definition public (last-tail lst))
  (definition public (make-list n . rest))
  (definition public (list-set! list n value))
  (definition public (set-cadr! pair value))
  (definition public (append! . rest))
  (definition public (position target lst (key: key (unspecified)) (test: test (unspecified))))
  (definition public (copy-tree tree))
  (definition public (position-of obj lst))
  (definition public (proper-list? lst))
  (definition public (proper-length l))
  (definition public (split-list lst))
  (definition public (last-cdr lst))
  (definition public (butlast-cdr lst))
  (definition public (add-ordered! obj lst (key: key (unspecified))))
  (definition public (move-to-head! target lst))
  (definition public (move-to-tail! target lst))
  (definition public (augment . rest))
  (definition public (memq? target <Object> list <Object>))
  (definition public (memv? target <Object> list <Object>))
  (definition public (member? target <Object> list <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (assq-value key list default-value))
  (definition public (assv-value key list default-value))
  (definition public (assoc-value key list default-value))
  (definition public (associate target <Object> list <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (rassociate target <Object> list <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (find-pair target <Object> list <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (reverse! list <Object>))
  (definition public (remove! target <Object> list <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (subtract! target <Object> list <Object>))
  (definition public (getprop plist <Object> target <Object> (key: key (unspecified)) (test: test (unspecified))))
  (definition public (plist-remove plist keyword))
  (definition public (plist-add plist keyword value))
  (definition public (getf plist <Object> target <Object> (key: key (unspecified)) (test: test (unspecified)) (not-found: not-found (unspecified))))
  (definition public (setf plist <Object> target <Object> value <Object>))
  (definition public (addf plist <Object> target <Object> value <Object>))
  (definition public (for-each-pair proc lst))
  (definition public (for-each-property proc lst))
  (definition public (map-property proc lst))
  (definition public (flatten-lists llist))
  (definition public (uniform lst (key: key (unspecified)) (test: test (unspecified))))
  (definition public (sort-property-list prop-list <Object>))
  (definition public (plist->alist ls))
  (definition public (alist->plist ls))
  (class List-Iterator extends Iterator
    (slot current)
    (slot public position)
    (method override (initialize self list <list>))
    (method override (get-next! self))
    (method override (done? self))
    (method override (put self object))
    (method override (get-position self))
    (method override (set-position self pos))
    (method override (get-state self))
    (method override (reset-state self state))
    (method public (get-list self)))
  (hub get-list)
  (class List-Factory extends Object
    (slot list getter generate)
    (slot last-list)
    (slot last-anchor)
    (slot current)
    (slot public size <fx> getter generate)
    (method package (put self object <Object>))
    (method (put-unique self object (test: test (unspecified))))
    (method package (put-sequence self seq <Object>))
    (method public (is-empty? self))
    (method public (get-last-element self))
    (method package (get-output self))
    (method public (reset self))
    (method private (copy-last-list self)))
  (hub get-size)
  (hub put-unique)
  (hub put-sequence)
  (hub is-empty?)
  (hub get-last-element)
  (hub get-output)
  (hub reset)
  (hub copy-last-list)
  (class Table extends Object
    (method override (initialize self . rest))
    (method override (print self output readably)))
  (definition public (table-add table <table> key value))
  (definition public (table-remove! table <table> key value))
  (definition public (table-subtract! table <table> key value))
  (definition public (empty-table table <table>))
  (definition public (table-keys table <table>))
  (definition public (table-values table <table>))
  (definition public (table-keys/values table <table>))
  (definition public (table-find table <table> value (test: test (unspecified))))
  (definition public (table-load table <table> input (error-on-duplicates? (unspecified))))
  (definition public (table-save table <table> output))
  (definition public (serialize-reference reference))
  (definition *serialized-classes* <table>)
  (definition public (serialize-class class))
  (definition public (serialize-object class content))
  (definition *deserialized-classes* <table>)
  (definition public (deserialize-class reference))
  (definition public (serialize obj))
  (definition public (deserialize obj))
  (definition public (serialize-literal obj))
  (definition public (deserialize-literal content))
  (definition *services*)
  (definition public (provide-service name proc))
  (definition public (request-service name (not-provided (unspecified))))
  (class Slot extends Field
    (slot offset getter generate)
    (slot initialize getter generate))
  (hub get-offset)
  (hub get-initialize)
  (class Property extends Slot
    (slot getter getter generate)
    (slot setter getter generate))
  (hub get-getter)
  (hub get-setter)
  (definition public (property? obj))
  (definition public (symbolize-property property <Object>))
  (definition public (symbolize-properties properties <Object>))
  (definition public (keywordize-property property <Object>))
  (definition public (keywordize-properties properties <Object>))
  (definition public (read-property object <Object> expr <Object>))
  (definition public (write-property object <Object> expr <Object> value <Object>))
  (definition public (property-field class <Class> expr <Object>))
  (definition public (property-field? class <Class> symbol <symbol>))
  (class String-Class extends Sequence-Class
    (method override (make-sequence self len))
    (method override (coerce-object self obj <Object>)))
  (class String metaclass String-Class extends Sequence
    (method override (initialize self . rest))
    (method override (coerce-string self))
    (method override (compare-object self obj))
    (method override (ci-compare-object self obj))
    (method override (sequence-element self n <fx>) <any>)
    (method override (sequence-set-element! self n <fx> obj <any>) <void>)
    (method override (sequence-cardinality self) <fx>)
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self)))
  (definition public undocumented (=stringstring s1 <string> s2 <string>) <bool>)
  (definition public undocumented (elementstring string <string> n) <char>)
  (definition public undocumented (set-element!string string <string> n c) <void>)
  (definition public undocumented (cardinalitystring string <string>) <fx>)
  (definition public undocumented (subseqstring string <string> start end) <string>)
  (definition public undocumented onsite (replace-subseq!string string <string> start end replacement) <string>)
  (definition public undocumented onsite (string-for-each proc seq <string>))
  (definition public undocumented onsite (butlaststring seq <string>) <string>)
  (definition public undocumented onsite (string-find seq <string> target (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified))) <int+>)
  (definition public undocumented onsite (string-find-in seq <string> target (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified))))
  (definition public undocumented onsite (starts-with?stringstring seq <string> target <string>) <bool>)
  (definition public undocumented onsite (ends-with?stringstring seq <string> target <string>) <bool>)
  (definition public (empty-string? object))
  (definition public (->string expr (detail (unspecified))))
  (definition public (string-search str target (start: start (unspecified))))
  (definition public (string-contains? str target (start: start (unspecified))))
  (definition public (string-trailer str <string> c) <string>)
  (definition public (remove-trailing-char string c))
  (definition public (value-string? object <Object>))
  (definition public (wi=? s1 <Object> s2 <Object>))
  (definition public (unique-domain-name name domain (separator: separator (unspecified))))
  (definition public (remove-numeric-suffix string))
  (definition public (compare-n x <string> y <string> max <fx> (test: test (unspecified))))
  (definition public (string-checksum str))
  (definition public (split-lines string))
  (definition public (join-lines lines))
  (definition public (append-lines . args))
  (definition public (seconds->milliseconds x))
  (definition public (milliseconds->seconds x))
  (definition public (seconds->microseconds x))
  (definition public (microseconds->seconds x))
  (class Waiter extends Object
    (slot name getter generate)
    (slot time getter generate)
    (slot proc getter generate)
    (slot mutex <object> getter generate)
    (slot condvar <object> getter generate)
    (slot public done? getter generate)
    (method override (initialize self name))
    (method public (done self))
    (method public (in self delay proc))
    (method (wait self)))
  (hub get-time)
  (hub get-proc)
  (hub get-mutex)
  (hub get-condvar)
  (hub get-done?)
  (hub done)
  (hub in)
  (hub wait)
  (definition public (make-waiter (name (unspecified))))
  (class Box extends Object
    (slot boxed getter generate)
    (method override (initialize self (boxed (unspecified))))
    (method override (print self output readably)))
  (hub get-boxed)
  (definition protected *Mega-Patch*)
  (definition public (gc-protect obj))
  (class ReadWrite-Gate extends Object
    (slot reader-count)
    (slot reader-mutex)
    (slot work-mutex)
    (method public (reader-lock! self))
    (method public (reader-unlock! self))
    (method public (writer-lock! self))
    (method public (writer-unlock! self)))
  (hub reader-lock!)
  (hub reader-unlock!)
  (hub writer-lock!)
  (hub writer-unlock!)
  (definition public (make-readwrite-gate))
  (class Priority-Queue extends Object
    (slot priority-count <fx>)
    (slot queue-vector <vector>)
    (slot mutex)
    (slot mutex-condition-variable)
    (method override (initialize self count))
    (method public (empty? self))
    (method public (size self))
    (method (top-queue self))
    (method public (push self obj (priority (unspecified))))
    (method public (pop self timeout)))
  (hub size)
  (hub top-queue)
  (hub push)
  (hub pop)
  (definition primordial-thread-object)
  (definition public (primordial-thread))
  (definition public (primordial-thread?))
  (definition public (new-thread thunk name . rest))
  (definition public (thread-group-all-threads thread-group))
  (definition public (top-threads))
  (definition public (present-thread-name name))
  (definition public (present-thread-state state))
  (definition public (safe-present-object object (max-width (unspecified))))
  (definition public (safe-present-property object slot))
  (definition delayed-events)
  (definition package (write-delayed-event thunk))
  (definition package (read-delayed-event))
  (definition public (process-delayed-events))
  (definition package (thread-loop? thread))
  (definition package (thread-start-loop thread))
  (definition package (thread-stop-loop thread))
  (definition package (thread-loop))
  (definition public (start-loop-thread name . rest))
  (definition thread-queues <table>)
  (definition thread-queues-mutex)
  (definition package (thread-has-port? thread))
  (definition (get-thread-queue thread) <Priority-Queue>)
  (definition package (thread-write-message thread thunk priority))
  (definition package (thread-read-message (timeout: timeout (unspecified))))
  (definition package (thread-write thread thunk (priority (unspecified))))
  (definition package (thread-read (timeout: timeout (unspecified))))
  (definition public (thread-process (timeout: timeout (unspecified))))
  (definition public (thread-post thread name thunk (priority (unspecified))))
  (definition public (thread-block thread name thunk (priority (unspecified))))
  (definition public (thread-execute thread name thunk (priority (unspecified))))
  (definition thread-call-noresult)
  (definition package (thread-call-result? result))
  (definition public (thread-call thread name thunk (priority (unspecified))))
  (definition public (thread-exit))
  (definition public (exit-thread thread))
  (definition public (sleep delay))
  (definition public (is-not? object type))
  (definition public category-identifier)
  (definition public category-descendants)
  (definition public class-ascendant)
  (definition public (category-name category))
  (definition public (category-unit category))
  (definition public (either . rest))
  (class Vector-Class extends Sequence-Class
    (method override (make-sequence self len)))
  (class Vector metaclass Vector-Class extends Sequence
    (method override (initialize self . rest))
    (method override (sequence-element self n))
    (method override (sequence-set-element! self n obj))
    (method override (sequence-cardinality self))
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self)))
  (definition public undocumented (elementvector vector <vector> n) <object>)
  (definition public undocumented (set-element!vector vector <vector> n obj) <void>)
  (definition public undocumented (cardinalityvector vector <vector>) <fx>)
  (definition public (vector-map proc vector <vector> . vectors))
  (definition public (vector-for-each proc vector <vector> . vectors))
  (definition public (allocate-vector size) <vector>)
  (definition public (subvector-shift! vector <vector> start <fx> end <fx> shift <fx>))
  (definition public (subf64vector-shift! vector <f64vector> start <fx> end <fx> shift <fx>))
  (definition public (allocate-s8vector size) <s8vector>)
  (definition public (allocate-u8vector size) <u8vector>)
  (definition public (allocate-s16vector size) <s16vector>)
  (definition public (allocate-u16vector size) <u16vector>)
  (definition public (allocate-s32vector size) <s32vector>)
  (definition public (allocate-u32vector size) <u32vector>)
  (definition public (allocate-s64vector size) <s64vector>)
  (definition public (allocate-u64vector size) <u64vector>)
  (definition public (allocate-f32vector size) <f32vector>)
  (definition public (allocate-f64vector size) <f64vector>)
  (definition AXIS_MIN_SIZE <fx>)
  (definition AXIS_GOLDEN_RATIO <fl>)
  (class Axis-Class extends Sequence-Class
    (method override (make-sequence self len)))
  (class Axis metaclass Axis-Class extends Sequence
    (slot public size <fx> accessors generate)
    (slot content <vector> accessors generate)
    (method override (initialize self (s (unspecified))))
    (method override (print self output detail))
    (method override (sequence-element self n <fx>) <any>)
    (method override (sequence-set-element! self n <fx> obj <any>) <void>)
    (method override (sequence-cardinality self) <fx>)
    (method override (sequence-tail self n <fx>) <Axis>)
    (method override (sequence-last self) <any>))
  (hub set-size)
  (hub get-content)
  (hub set-content)
  (definition public (axis . rest))
  (definition public undocumented (elementAxis axis <Axis> n) <any>)
  (definition public undocumented (set-element!Axis axis <Axis> n obj) <void>)
  (definition public undocumented (cardinalityAxis axis <Axis>) <fx>)
  (definition public undocumented onsite (tailAxis axis <Axis> n) <Axis>)
  (definition public undocumented onsite (lastAxis axis <Axis>) <any>)
  (definition public undocumented onsite (insert!Axis axis <Axis> pos obj) <Axis>)
  (definition public undocumented onsite (replace-subseq!Axis axis <Axis> start end replacement) <Axis>)
  (definition public (axis-remove! axis <Axis> element <any>) <void>)
  (definition public (axis-adjust axis <Axis> n <fx>))
  (definition public (axis-add axis <Axis> obj))
  (definition public (allocate-axis size <fx>) <Axis>)
  (definition public undocumented (newcategory<Axis> class <category<Axis>> size) <Axis>)
  (definition public undocumented (axis-ref axis <Axis> n) <object>)
  (definition public undocumented (axis-set! axis <Axis> n obj) <void>)
  (definition public undocumented (axis-cardinality axis <Axis>) <fx>)
  (definition public undocumented onsite (axis-for-each proc seq <Axis>))
  (definition public undocumented onsite (axis-find seq <Axis> target (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified))) <int+>)
  (definition public undocumented onsite (axis-find-in seq <Axis> target (key: key (unspecified)) (test: test (unspecified)) (start: start (unspecified)) (end: end (unspecified)) (reversed?: reversed? (unspecified))))
  (definition public (dispatch? expr))
  (definition public (dispatch-string? str))
  (definition public (dispatch->name dispatch))
  (class Enumeration extends Class
    (slot members accessors generate)
    (method package (add-member self member))
    (method override (print self output readably))
    (method (name->member self name))
    (method (value->member self value))
    (method public (name->value self name))
    (method public (value->name self value))
    (method public (bits->names self bits)))
  (hub get-members)
  (hub set-members)
  (hub add-member)
  (hub name->member)
  (hub value->member)
  (hub name->value)
  (hub value->name)
  (hub bits->names)
  (class Enumeration-Member metaclass Enumeration extends Object
    (slot name getter generate)
    (method override (initialize self name))
    (method override (print self output readably))
    (method package virtual (get-value self)))
  (hub get-value)
  (definition public (enumeration? obj))
  (definition public (parse-attributes list))
  (definition public (reference-string? str))
  (definition public (reference->name str))
  (definition public (32-bit-integer->bytes x proc))
  (definition public (64-bit-integer->bytes x proc))
  (definition public (bytes->32-bit-integer b1 b2 b3 b4))
  (definition public (bytes->64-bit-integer b1 b2 b3 b4 b5 b6 b7 b8))
  (definition public (code-string->32-bit-integer s))
  (definition public (32-bit-integer->code-string x))
  (definition public undocumented (make-u8-content size content))
  (definition public undocumented (u8-content-size content))
  (definition public undocumented (iterate-u8-content content proc))
  (definition public undocumented (read-u8-content port))
  (definition public undocumented (write-u8-content content port))
  (definition public undocumented (start-pump port proc))
  (definition public (write-32-bit-integer n port))
  (definition public (read-32-bit-integer port))
  (definition public (write-binary-content u8vect port))
  (definition public (read-binary-content port))
  (definition public (write-binary-object data port (encoder (unspecified))))
  (definition public (read-binary-object port (decoder (unspecified))))
  (definition public (write-binary data port))
  (definition public (read-binary port))
  (definition public (read-until test input))
  (definition public (read-string-element string))
  (definition public (read-string-content string))
  (definition public (readable-string? string))
  (definition public (read-string-safe string))
  (definition public (read-delimited-string string char))
  (definition public (require-char input))
  (definition public (skip-line input))
  (definition public (skip-whites input))
  (definition public (read-delimited input kind delimiter (allow-eof? (unspecified))))
  (definition public (string-delimiter? c))
  (definition public (read-platform-line input))
  (definition public (read-lines input))
  (definition public (read-lines-chunked input chunk-size proc))
  (definition public (read-content-string input))
  (definition public (pipe input output))
  (definition public (textual expr (output (unspecified))))
  (definition public (describe expr (output (unspecified))))
  (definition public (fresh-line (output (unspecified))))
  (definition public (at-fresh-line? (output (unspecified))))
  (definition *printers* <table>)
  (definition package (register-printer name proc))
  (definition public (with-printer printer proc))
  (definition public (present-reference reference))
  (definition public (write-line line . rest))
  (definition public (write-lines output lines))
  (definition public (do-nothing . rest))
  (definition public (identity x))
  (definition public (const x))
  (definition public (compose f g))
  (definition public (compose* . fns))
  (class Subseq-Class extends Sequence-Class)
  (class Subseq metaclass Subseq-Class extends Sequence
    (slot sequence getter generate)
    (slot start <fx> accessors generate)
    (slot public size <fx> accessors generate)
    (method override (initialize self sequence start <fx> size <fx>))
    (method override (print self output detail))
    (method override (coerce-string self))
    (method override (sequence-element self n <fx>) <any>)
    (method override (sequence-set-element! self n <fx> obj <any>) <void>)
    (method override (sequence-cardinality self) <int>)
    (method override (sequence-subseq! self s <fx> e <fx>) <Subseq>))
  (hub get-sequence)
  (hub get-start)
  (hub set-start)
  (definition public (allocate-subseq sequence <string> start <fx> size <fx>) <Subseq>)
  (definition public undocumented (newcategory<Subseq> class <category<Subseq>> sequence start size) <Subseq>)
  (definition public (offset-subseq! subseq <Subseq> offset <fx>) <void>)
  (definition public (grow-subseq! subseq <Subseq> n <fx>) <void>)
  (definition public undocumented (subseq-ref subseq <Subseq> n) <object>)
  (definition public undocumented (subseq-set! subseq <Subseq> n obj) <void>)
  (definition public undocumented (subseq-cardinality subseq <Subseq>) <int>)
  (class Subseq$string$-Class extends Sequence-Class)
  (class Subseq$string$ metaclass Subseq$string$-Class extends Sequence
    (slot sequence <string> getter generate)
    (slot start <fx> accessors generate)
    (slot public size <fx> accessors generate)
    (method override (initialize self sequence <string> start <fx> size <fx>))
    (method override (print self output detail))
    (method public (print-content self output))
    (method override (sequence-element self n <fx>) <any>)
    (method override (sequence-set-element! self n <fx> obj <any>) <void>)
    (method override (sequence-cardinality self) <int>)
    (method override (sequence-subseq! self s <fx> e <fx>) <Subseq$string$>))
  (hub print-content)
  (definition public (allocate-subseq$string$ sequence <string> start <fx> size <fx>) <Subseq$string$>)
  (definition public undocumented (newcategory<Subseq$string$> class <category<Subseq$string$>> sequence start size) <Subseq$string$>)
  (definition public undocumented (elementSubseq$string$ subseq <Subseq$string$> n) <char>)
  (definition public undocumented (set-element!Subseq$string$ subseq <Subseq$string$> n obj) <void>)
  (definition public undocumented (cardinalitySubseq$string$ subseq <Subseq$string$>) <fx>)
  (definition public undocumented onsite (subseq!string seq <string> s e) <Subseq$string$>)
  (definition public undocumented onsite (subseq!Subseq$string$ subseq <Subseq$string$> s e) <Subseq$string$>)
  (definition public undocumented onsite (offset-subseq!Subseq$string$ subseq <Subseq$string$> offset) <void>)
  (definition public undocumented onsite (grow-subseq!Subseq$string$ subseq <Subseq$string$> n) <void>)
  (definition public (values->list values))
  (definition protected capabilities)
  (definition public (get-capability capability (default-value (unspecified))))
  (definition public (set-capability capability value))
  (definition protected siteids <vector>)
  (definition public (id->site id <fx>) <Call-Site>)
  (definition next-site-id <fx>)
  (definition (next-site-id!) <fx>)
  (definition protected (site-id-count) <fx>)
  (definition call-sites <table>)
  (definition public (registered-sites))
  (definition public (registered-site name) <Call-Site>)
  (definition public (find-site name) <Call-Site+>)
  (definition public (register-site name properties))
  (definition site-callback)
  (definition public (get-site-callback))
  (definition public (set-site-callback callback))
  (definition public (call-site-ref name))
  (definition public (call-site-set! name value))
  (definition public (format . rest))
  (definition public (format-cardinality n <fx>))
  (definition public (format-plural n <fx> (plural (unspecified))))
  (definition public (format-gender word))
  (definition public (format-is/are n <fx>))
  (definition public (format-was/were n <fx>))
  (definition public (format-y/ies n <fx>))
  (definition public (format-following name n <fx>))
  (definition (print-expr expr detail (output (unspecified))))
  (definition (print-unsigned n (output (unspecified))))
  (definition (print-binary n (output (unspecified))))
  (definition (print-hexadecimal n (output (unspecified))))
  (definition (print-real r d (output (unspecified))))
  (definition (print-list list separator last-separator before after detail (output (unspecified))))
  (class Cell extends Numeric
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot line <fx> accessors generate)
    (slot col <fx> accessors generate)
    (method override (initialize self l <fx> c <fx>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (di-compare-object self target))
    (method override (print self output readably))
    (method override (numeric-norm self))
    (method override (numeric-add self n))
    (method override (numeric-negate self))
    (method override (numeric-multiply self n))
    (method override (numeric-inverse self))
    (method public (increase-line self (delta (unspecified))))
    (method public (increase-col self (delta (unspecified)))))
  (hub get-line)
  (hub set-line)
  (hub get-col)
  (hub set-col)
  (hub increase-line)
  (hub increase-col)
  (definition public (allocate-cell line <fx> col <fx>) <Cell>)
  (definition public undocumented (newcategory<Cell> class <category<Cell>> line col) <Cell>)
  (definition public undocumented (copy-cell c <Cell>) <Cell>)
  (definition public undocumented (cell=? c1 <Cell> c2 <Cell>) <bool>)
  (definition public undocumented onsite (cell<? c1 <Cell> c2 <Cell>) <bool>)
  (definition public undocumented onsite (cell<=? c1 <Cell> c2 <Cell>) <bool>)
  (definition public undocumented onsite (cell>? c1 <Cell> c2 <Cell>) <bool>)
  (definition public undocumented onsite (cell>=? c1 <Cell> c2 <Cell>) <bool>)
  (definition public undocumented (cell+ c1 <Cell> c2 <Cell>) <Cell>)
  (definition public undocumented (+Cellint c <Cell> n <int>) <Cell>)
  (definition public undocumented (cell- c1 <Cell> c2 <Cell>) <Cell>)
  (definition public undocumented (-Cellint c <Cell> n <int>) <Cell>)
  (definition public (cell-hash c <Cell>))
  (class Range extends Object
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot start)
    (slot end)
    (method override (initialize self s e))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably))
    (method public (get-start self))
    (method public (get-end self))
    (method public virtual (extent self))
    (method public virtual (extended? self))
    (method public virtual (empty? self))
    (method public (inside? self n))
    (method public (before? self n))
    (method public (after? self n))
    (method public (intersect? self range))
    (method public (intersect self range)))
  (hub get-end)
  (hub extent)
  (hub extended?)
  (hub inside?)
  (hub before?)
  (hub after?)
  (hub intersect?)
  (hub intersect)
  (definition public (allocate-range start end) <Range>)
  (definition public undocumented (newcategory<Range> class <category<Range>> start end) <Range>)
  (definition public undocumented (range=? r1 <Range> r2 <Range>) <bool>)
  (class Range$Cell$ extends Object
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot start <Cell> getter generate)
    (slot end <Cell> getter generate)
    (method override (initialize self s <Cell> e <Cell>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably))
    (method public virtual (extent self) <Cell>)
    (method public virtual (extended? self))
    (method public virtual (empty? self))
    (method public (inside? self n <Cell>) <bool>)
    (method public (before? self n <Cell>) <bool>)
    (method public (after? self n <Cell>) <bool>)
    (method public (intersect? self range <Range$Cell$>) <bool>)
    (method public (intersect self range <Range$Cell$>)))
  (definition public (allocate-range$Cell$ start <Cell> end <Cell>) <Range$Cell$>)
  (definition public undocumented (newcategory<Range$Cell$> class <category<Range$Cell$>> start end) <Range$Cell$>)
  (definition public undocumented (=Range$Cell$Range$Cell$ r1 <Range$Cell$> r2 <Range$Cell$>) <bool>)
  (class Point extends Numeric
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot h <fx> getter generate)
    (slot v <fx> getter generate)
    (method override (initialize self h <fx> v <fx>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably))
    (method override (numeric-norm self))
    (method override (numeric-add self n))
    (method override (numeric-negate self))
    (method override (numeric-multiply self n))
    (method override (numeric-inverse self)))
  (hub get-h)
  (hub get-v)
  (definition public (allocate-point h <fx> v <fx>) <Point>)
  (definition public undocumented (newcategory<Point> class <category<Point>> h v) <Point>)
  (definition public undocumented (point=? p1 <Point> p2 <Point>) <bool>)
  (definition public undocumented (point+ p1 <Point> p2 <Point>) <Point>)
  (definition public undocumented (+Pointint p <Point> n <int>) <Point>)
  (definition public undocumented (point- p1 <Point> p2 <Point>) <Point>)
  (definition public undocumented (-Pointint p <Point> n <int>) <Point>)
  (definition public undocumented (-Point p <Point>) <Point>)
  (definition public undocumented (point* p <Point> n <int>) <Point>)
  (class Point$fl$ extends Numeric
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot h <fl> getter generate)
    (slot v <fl> getter generate)
    (method override (initialize self h <fl> v <fl>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably))
    (method override (numeric-norm self))
    (method override (numeric-add self n))
    (method override (numeric-negate self))
    (method override (numeric-multiply self n))
    (method override (numeric-inverse self)))
  (class Distance extends Numeric
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot x <fx> getter generate)
    (slot y <fx> getter generate)
    (method override (initialize self x <fx> y <fx>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably))
    (method override (numeric-norm self))
    (method override (numeric-add self n))
    (method override (numeric-negate self))
    (method override (numeric-multiply self n))
    (method override (numeric-inverse self)))
  (hub get-x)
  (hub get-y)
  (definition public (allocate-distance x <fx> y <fx>) <Distance>)
  (definition public undocumented (newcategory<Distance> class <category<Distance>> x y) <Distance>)
  (definition public undocumented (distance=? d1 <Distance> d2 <Distance>) <bool>)
  (definition public undocumented (distance+ d1 <Distance> d2 <Distance>) <Distance>)
  (definition public undocumented (distance- d1 <Distance> d2 <Distance>) <Distance>)
  (definition public undocumented (-Distance d <Distance>) <Distance>)
  (definition public undocumented (distance* d <Distance> n <int>) <Distance>)
  (definition public (distance-min d1 <Distance> d2 <Distance>) <Distance>)
  (definition public (distance-max d1 <Distance> d2 <Distance>) <Distance>)
  (class Dimension extends Numeric
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot width <fx> getter generate)
    (slot height <fx> getter generate)
    (method override (initialize self w <fx> h <fx>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably))
    (method override (numeric-norm self))
    (method override (numeric-add self n))
    (method override (numeric-negate self))
    (method override (numeric-multiply self n))
    (method override (numeric-inverse self)))
  (hub get-width)
  (hub get-height)
  (definition public (allocate-dimension width <fx> height <fx>) <Dimension>)
  (definition public undocumented (newcategory<Dimension> class <category<Dimension>> width height) <Dimension>)
  (definition public undocumented (dimension=? d1 <Dimension> d2 <Dimension>) <bool>)
  (definition public undocumented (dimension+ d1 <Dimension> d2 <Dimension>) <Dimension>)
  (definition public undocumented (dimension- d1 <Dimension> d2 <Dimension>) <Dimension>)
  (definition public undocumented (dimension* d <Dimension> n <int>) <Dimension>)
  (definition public (dimension-min d1 <Dimension> d2 <Dimension>) <Dimension>)
  (definition public (dimension-max d1 <Dimension> d2 <Dimension>) <Dimension>)
  (class Dimension$fl$ extends Numeric
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (slot width <fl> getter generate)
    (slot height <fl> getter generate)
    (method override (initialize self w <fl> h <fl>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably))
    (method override (numeric-norm self))
    (method override (numeric-add self n))
    (method override (numeric-negate self))
    (method override (numeric-multiply self n))
    (method override (numeric-inverse self)))
  (class Rect extends Object
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (method meta override (coerce-object self object))
    (slot left <fx> accessors generate)
    (slot top <fx> accessors generate)
    (slot right <fx> accessors generate)
    (slot bottom <fx> accessors generate)
    (method override (initialize self l <fx> t <fx> r <fx> b <fx>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably)))
  (hub get-left)
  (hub set-left)
  (hub get-top)
  (hub set-top)
  (hub get-right)
  (hub set-right)
  (hub get-bottom)
  (hub set-bottom)
  (definition public (rect? obj))
  (definition public (allocate-rect left <fx> top <fx> right <fx> bottom <fx>) <Rect>)
  (definition public undocumented (newcategory<Rect> class <category<Rect>> left top right bottom) <Rect>)
  (definition public undocumented (rect=? r1 <Rect> r2 <Rect>) <bool>)
  (definition public (empty-rect? rect))
  (definition public (empty-rect$fl$? rect))
  (class Rect$fl$ extends Object
    (method meta override (marshall-object self object))
    (method meta override (unmarshall-object self content))
    (method meta override (coerce-object self object))
    (slot left <fl> accessors generate)
    (slot top <fl> accessors generate)
    (slot right <fl> accessors generate)
    (slot bottom <fl> accessors generate)
    (method override (initialize self l <fl> t <fl> r <fl> b <fl>))
    (method override (copy-object self deep?))
    (method override (compare-object self target))
    (method override (print self output readably)))
  (definition public (rect$fl$? obj))
  (definition public (allocate-rect$fl$ left <fl> top <fl> right <fl> bottom <fl>) <Rect$fl$>)
  (definition public undocumented (newcategory<Rect$fl$> class <category<Rect$fl$>> left top right bottom) <Rect$fl$>)
  (definition public undocumented (rect$fl$=? r1 <Rect$fl$> r2 <Rect$fl$>) <bool>)
  (definition public (point->distance pt <Point>) <Distance>)
  (definition public (point->dimension pt <Point>) <Dimension>)
  (definition public (distance->point dist <Distance>) <Point>)
  (definition public (distance->dimension dist <Distance>) <Dimension>)
  (definition public (dimension->point dim <Dimension>) <Point>)
  (definition public (dimension->distance dim <Dimension>) <Distance>)
  (class S8Vector-Class extends Sequence-Class
    (method override (make-sequence self len)))
  (class S8Vector metaclass S8Vector-Class extends Sequence
    (method override (initialize self . rest))
    (method override (sequence-element self n))
    (method override (sequence-set-element! self n obj))
    (method override (sequence-cardinality self))
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self)))
  (definition public undocumented (elements8vector vector <s8vector> n) <object>)
  (definition public undocumented (set-element!s8vector vector <s8vector> n obj) <void>)
  (definition public undocumented (cardinalitys8vector vector <s8vector>) <int>)
  (class U8Vector-Class extends Sequence-Class
    (method override (make-sequence self len)))
  (class U8Vector metaclass U8Vector-Class extends Sequence
    (method override (initialize self . rest))
    (method override (sequence-element self n))
    (method override (sequence-set-element! self n obj))
    (method override (sequence-cardinality self))
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self)))
  (definition public undocumented (elementu8vector vector <u8vector> n) <object>)
  (definition public undocumented (set-element!u8vector vector <u8vector> n obj) <void>)
  (definition public undocumented (cardinalityu8vector vector <u8vector>) <int>)
  (class S16Vector-Class extends Sequence-Class
    (method override (make-sequence self len)))
  (class S16Vector metaclass S16Vector-Class extends Sequence
    (method override (initialize self . rest))
    (method override (sequence-element self n))
    (method override (sequence-set-element! self n obj))
    (method override (sequence-cardinality self))
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self)))
  (definition public undocumented (elements16vector vector <s16vector> n) <object>)
  (definition public undocumented (set-element!s16vector vector <s16vector> n obj) <void>)
  (definition public undocumented (cardinalitys16vector vector <s16vector>) <int>)
  (class U16Vector-Class extends Sequence-Class
    (method override (make-sequence self len)))
  (class U16Vector metaclass U16Vector-Class extends Sequence
    (method override (initialize self . rest))
    (method override (sequence-element self n))
    (method override (sequence-set-element! self n obj))
    (method override (sequence-cardinality self))
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self)))
  (definition public undocumented (elementu16vector vector <u16vector> n) <object>)
  (definition public undocumented (set-element!u16vector vector <u16vector> n obj) <void>)
  (definition public undocumented (cardinalityu16vector vector <u16vector>) <int>)
  (class S32Vector-Class extends Sequence-Class
    (method override (make-sequence self len)))
  (class S32Vector metaclass S32Vector-Class extends Sequence
    (method override (initialize self . rest))
    (method override (sequence-element self n))
    (method override (sequence-set-element! self n obj))
    (method override (sequence-cardinality self))
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self)))
  (definition public undocumented (elements32vector vector <s32vector> n) <object>)
  (definition public undocumented (set-element!s32vector vector <s32vector> n obj) <void>)
  (definition public undocumented (cardinalitys32vector vector <s32vector>) <int>)
  (class U32Vector-Class extends Sequence-Class
    (method override (make-sequence self len)))
  (class U32Vector metaclass U32Vector-Class extends Sequence
    (method override (initialize self . rest))
    (method override (sequence-element self n))
    (method override (sequence-set-element! self n obj))
    (method override (sequence-cardinality self))
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self)))
  (definition public undocumented (elementu32vector vector <u32vector> n) <object>)
  (definition public undocumented (set-element!u32vector vector <u32vector> n obj) <void>)
  (definition public undocumented (cardinalityu32vector vector <u32vector>) <int>)
  (class S64Vector-Class extends Sequence-Class
    (method override (make-sequence self len)))
  (class S64Vector metaclass S64Vector-Class extends Sequence
    (method override (initialize self . rest))
    (method override (sequence-element self n))
    (method override (sequence-set-element! self n obj))
    (method override (sequence-cardinality self))
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self)))
  (definition public undocumented (elements64vector vector <s64vector> n) <object>)
  (definition public undocumented (set-element!s64vector vector <s64vector> n obj) <void>)
  (definition public undocumented (cardinalitys64vector vector <s64vector>) <int>)
  (class U64Vector-Class extends Sequence-Class
    (method override (make-sequence self len)))
  (class U64Vector metaclass U64Vector-Class extends Sequence
    (method override (initialize self . rest))
    (method override (sequence-element self n))
    (method override (sequence-set-element! self n obj))
    (method override (sequence-cardinality self))
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self)))
  (definition public undocumented (elementu64vector vector <u64vector> n) <object>)
  (definition public undocumented (set-element!u64vector vector <u64vector> n obj) <void>)
  (definition public undocumented (cardinalityu64vector vector <u64vector>) <int>)
  (class F32Vector-Class extends Sequence-Class
    (method override (make-sequence self len)))
  (class F32Vector metaclass F32Vector-Class extends Sequence
    (method override (initialize self . rest))
    (method override (sequence-element self n))
    (method override (sequence-set-element! self n obj))
    (method override (sequence-cardinality self))
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self)))
  (definition public undocumented (elementf32vector vector <f32vector> n) <object>)
  (definition public undocumented (set-element!f32vector vector <f32vector> n obj) <void>)
  (definition public undocumented (cardinalityf32vector vector <f32vector>) <int>)
  (class F64Vector-Class extends Sequence-Class
    (method override (make-sequence self len)))
  (class F64Vector metaclass F64Vector-Class extends Sequence
    (method override (initialize self . rest))
    (method override (sequence-element self n))
    (method override (sequence-set-element! self n obj))
    (method override (sequence-cardinality self))
    (method override (sequence-tail self n))
    (method override (sequence-last self))
    (method override (sequence-butlast self)))
  (definition public undocumented (elementf64vector vector <f64vector> n) <object>)
  (definition public undocumented (set-element!f64vector vector <f64vector> n obj) <void>)
  (definition public undocumented (cardinalityf64vector vector <f64vector>) <int>)
  (class FixedVector-Class extends Vector-Class)
  (class FixedS8Vector-Class extends S8Vector-Class)
  (class FixedU8Vector-Class extends U8Vector-Class)
  (class FixedS16Vector-Class extends S16Vector-Class)
  (class FixedU16Vector-Class extends U16Vector-Class)
  (class FixedS32Vector-Class extends S32Vector-Class)
  (class FixedU32Vector-Class extends U32Vector-Class)
  (class FixedS64Vector-Class extends S64Vector-Class)
  (class FixedU64Vector-Class extends U64Vector-Class)
  (class FixedF32Vector-Class extends F32Vector-Class)
  (class FixedF64Vector-Class extends F64Vector-Class)
  (class FixedVector metaclass FixedVector-Class extends Vector)
  (class FixedS8Vector metaclass FixedS8Vector-Class extends S8Vector)
  (class FixedU8Vector metaclass FixedU8Vector-Class extends U8Vector)
  (class FixedS16Vector metaclass FixedS16Vector-Class extends S16Vector)
  (class FixedU16Vector metaclass FixedU16Vector-Class extends U16Vector)
  (class FixedS32Vector metaclass FixedS32Vector-Class extends S32Vector)
  (class FixedU32Vector metaclass FixedU32Vector-Class extends U32Vector)
  (class FixedS64Vector metaclass FixedS64Vector-Class extends S64Vector)
  (class FixedU64Vector metaclass FixedU64Vector-Class extends U64Vector)
  (class FixedF32Vector metaclass FixedF32Vector-Class extends F32Vector)
  (class FixedF64Vector metaclass FixedF64Vector-Class extends F64Vector)
  (definition *console-port-getter*)
  (definition public (console-port-getter-set! getter))
  (definition public (current-console-port))
  (definition public (attached-console-port))
  (definition public (console-input-port))
  (definition public (console-output-port))
  (definition public (force-console))
  (definition platform-log)
  (definition package (set-platform-log log))
  (definition *console-clear*)
  (definition public (console-clear-set! clear))
  (definition console-mutex)
  (definition (with-console-mutex thunk))
  (definition public (console-string string (color: color (unspecified))))
  (definition public (console-line string (color: color (unspecified))))
  (definition public (console . rest))
  (definition public (debug-line . rest))
  (definition public (debug-string . rest))
  (definition public (debug-thread . rest))
  (definition public (debug . rest))
  (definition public (clear-debug))
  (definition procedure-name-cache <table>)
  (definition public (get-procedure-name procedure))
  (definition public (get-continuation-name cont))
  (definition public (continuation-stack cont (identifiers?: identifiers? (unspecified)) (locations?: locations? (unspecified)) (dynamic-environment?: dynamic-environment? (unspecified)) (lexical-environment?: lexical-environment? (unspecified)) (depth: depth (unspecified))))
  (definition public (execution-stack (identifiers?: identifiers? (unspecified)) (locations?: locations? (unspecified)) (dynamic-environment?: dynamic-environment? (unspecified)) (lexical-environment?: lexical-environment? (unspecified)) (depth: depth (unspecified))))
  (definition public (execution-backtrace (depth (unspecified))))
  (definition public (debugger-argument))
  (definition public (using-debugger?))
  (definition public (break . rest))
  (definition public (inspect . rest))
  (definition public (advise . rest))
  (definition public (unadvise . rest))
  (definition public (debug-advice . rest))
  (definition public (count-advice . rest))
  (definition public (time-advice . rest))
  (definition public (trace . rest))
  (definition public (untrace . rest))
  (definition public (start-repl . rest))
  (definition public (start-jazz-repl . rest))
  (definition *exception-debugger*)
  (definition public (get-exception-debugger))
  (definition public (set-exception-debugger exception-debugger))
  (definition public current-exception-debugger)
  (definition package (exception-debugger-hook exc other))
  (definition public (with-exception-debugger exception-debugger thunk))
  (definition public (active-exception-debugger))
  (definition public (system-exception-debugger exc))
  (definition public (with-system-exception-debugger thunk))
  (class Exception extends Object
    (method core virtual (present-exception self))
    (method core virtual (exception-message self))
    (method core virtual (get-detail self))
    (method public virtual (get-message self))
    (method public virtual (present-message self . rest))
    (method override (print self output readably)))
  (hub present-exception)
  (hub exception-message)
  (hub get-detail)
  (hub get-message)
  (hub present-message)
  (definition public (exception? obj))
  (class Exception-Detail-Class extends Class
    (method override (marshall-object self object))
    (method override (unmarshall-object self content)))
  (class Exception-Detail metaclass Exception-Detail-Class extends Object
    (slot icon getter generate)
    (slot title getter generate)
    (slot location getter generate)
    (slot children getter generate)
    (method override (initialize self icon title location children))
    (method override (print self output readably)))
  (hub get-icon)
  (hub get-title)
  (hub get-location)
  (class System-Exception extends Exception
    (slot exception getter generate)
    (method override (initialize self exception)))
  (hub get-exception)
  (definition public (wrap-exception obj))
  (class Break extends Exception
    (slot continue)
    (method override (initialize self continue)))
  (class Continue extends Exception)
  (class Error extends Exception
    (slot message accessors generate)
    (method override (initialize self (message: message (unspecified)))))
  (hub set-message)
  (definition public (error? obj))
  (class Read-Error extends Error
    (slot source getter generate)
    (slot start getter generate)
    (slot end getter generate)
    (method override (initialize self . rest))
    (method public (get-range self)))
  (hub get-source)
  (hub get-range)
  (class Parse-Error extends Error
    (slot source getter generate)
    (slot start getter generate)
    (slot end getter generate)
    (method override (initialize self . rest)))
  (class Conversion-Error extends Parse-Error
    (slot object getter generate)
    (slot type getter generate)
    (method override (initialize self . rest))
    (method override (get-message self)))
  (hub get-object)
  (hub get-type)
  (class Source-Error extends Error
    (slot source getter generate)
    (slot start getter generate)
    (slot end getter generate)
    (method override (initialize self source . rest))
    (method public (get-range self)))
  (class Signal extends Exception)
  (class Cancel-Signal extends Signal)
  (definition public (call-with-catch predicate/type catcher thunk))
  (definition exception-contexts)
  (definition public (get-exception-context exception))
  (definition public (set-exception-context exception continuation))
  (definition public (capture-exception-context exception))
  (definition public (throw exception))
  (definition public (error . rest))
  (definition public (disabled-functionality))
  (definition public (must-implement definition-name (what (unspecified))))
  (definition public (warn string . rest))
  (definition public (warn-unimplemented name))
  (definition public (signal signal))
  (definition public (signal-cancel))
  (class Restart extends Object
    (slot name getter generate)
    (slot message getter generate)
    (slot handler getter generate)
    (method override (initialize self name message handler))
    (method override (print self output readably)))
  (hub get-handler)
  (definition public current-restarts)
  (definition public (with-restart-handler name message handler thunk))
  (definition public (with-restart-catcher name message thunk (restart-result (unspecified))))
  (definition public (find-restart name))
  (definition public (find-restarts name))
  (definition public (invoke-restart restart . rest))
  (definition public (new-system-thread thunk name . rest))
  (definition public (output-header title printer (language: language (unspecified)) (system: system (unspecified)) (license: license (unspecified)) (author: author (unspecified)) (copyright: copyright (unspecified)) (contributors: contributors (unspecified)) (end-proper?: end-proper? (unspecified))))
  (definition public (output-section title output (language: language (unspecified)) (level: level (unspecified))))
  (class Formatter extends Object
    (method public virtual (format-directive self formatting output directive)))
  (hub format-directive)
  (class Print-Sequencer extends Object)
  (definition public (parse-integer string))
  (definition public (parse-hexadecimal string))
  (definition public (parse-boolean string))
  (definition public (parse-strings string (separator: separator (unspecified))))
  (definition public (parse-delimited-string string (separator: separator (unspecified))))
  (definition public (bell . rest))
  (definition public tell-precision)
  (definition public (set-tell-precision precision))
  (definition public (tell . rest))
  (class Walk-Binding extends Type
    (method core virtual (walk-binding-lookup self symbol source-declaration))
    (method core virtual (walk-binding-referenced self))
    (method core virtual (walk-binding-validate-call self walker resume source-declaration operator arguments form-src))
    (method core virtual (walk-binding-validate-assignment self walker resume source-declaration symbol-src))
    (method core virtual (walk-binding-assignable? self))
    (method core virtual (walk-binding-walkable? self))
    (method core virtual (walk-binding-walk-form self walker resume declaration environment form-src))
    (method core virtual (walk-binding-expandable? self))
    (method core virtual (walk-binding-expand-form self walker resume declaration environment form-src))
    (method core virtual (emit-binding-symbol self source-declaration environment))
    (method core virtual (emit-binding-reference self source-declaration walker resume environment))
    (method core virtual (emit-binding-call self binding-src arguments arguments-codes source-declaration environment))
    (method core virtual (emit-inlined-binding-call self arguments call source-declaration walker resume environment))
    (method core virtual (emit-binding-assignment self value source-declaration environment form-src)))
  (hub walk-binding-lookup)
  (hub walk-binding-referenced)
  (hub walk-binding-validate-call)
  (hub walk-binding-validate-assignment)
  (hub walk-binding-assignable?)
  (hub walk-binding-walkable?)
  (hub walk-binding-walk-form)
  (hub walk-binding-expandable?)
  (hub walk-binding-expand-form)
  (hub emit-binding-symbol)
  (hub emit-binding-reference)
  (hub emit-binding-call)
  (hub emit-inlined-binding-call)
  (hub emit-binding-assignment)
  (class Lexical-Binding extends Walk-Binding
    (slot name getter generate)
    (slot type getter generate)
    (slot hits accessors generate)
    (method override (initialize self . rest))
    (method core package virtual (resolve-binding self))
    (method override (print self output detail)))
  (hub get-hits)
  (hub set-hits)
  (hub resolve-binding)
  (class Declaration extends Lexical-Binding
    (slot access getter generate)
    (slot compatibility getter generate)
    (slot modifiers getter generate)
    (slot attributes getter generate)
    (slot toplevel getter generate)
    (slot parent getter generate)
    (slot locator getter generate)
    (slot source accessors generate)
    (slot name-source accessors generate)
    (method override (initialize self . rest))
    (method core virtual (compose-declaration-locator self))
    (method core package virtual (lookup-declaration self symbol access source-declaration))
    (method core virtual (get-declaration-inclusions self))
    (method core virtual (get-nextmethod-signature self))
    (method core virtual (emit-declaration self walker resume environment))
    (method core virtual (expand-referenced-declaration self))
    (method core virtual (outline-generate self output))
    (method core virtual (outline-extract self meta)))
  (hub get-compatibility)
  (hub get-modifiers)
  (hub get-attributes)
  (hub get-toplevel)
  (hub get-parent)
  (hub set-source)
  (hub get-name-source)
  (hub set-name-source)
  (hub compose-declaration-locator)
  (hub lookup-declaration)
  (hub get-declaration-inclusions)
  (hub get-nextmethod-signature)
  (hub emit-declaration)
  (hub expand-referenced-declaration)
  (hub outline-generate)
  (hub outline-extract)
  (native-syntax jazz:update-declaration)
  (native-syntax jazz:private-access)
  (native-syntax jazz:public-access)
  (native-syntax jazz:protected-access)
  (class Declaration-Reference extends Object
    (slot name getter generate)
    (slot declaration getter generate)
    (method core virtual (resolve-reference self module-declaration)))
  (hub get-declaration)
  (hub resolve-reference)
  (class Module-Reference extends Declaration-Reference)
  (class Export-Reference extends Declaration-Reference
    (slot module-reference getter generate))
  (hub get-module-reference)
  (class Autoload-Reference extends Export-Reference
    (slot hubs? getter generate))
  (hub get-hubs?)
  (class Unit-Declaration extends Declaration
    (slot container getter generate)
    (slot requires getter generate))
  (hub get-container)
  (hub get-requires)
  (class Namespace-Declaration extends Declaration
    (slot lookups getter generate)
    (slot children accessors generate)
    (slot body accessors generate))
  (hub get-lookups)
  (hub set-children)
  (hub get-body)
  (hub set-body)
  (native-syntax jazz:get-access-lookup)
  (class Module-Declaration extends Namespace-Declaration
    (slot walker getter generate)
    (slot container getter generate)
    (slot dialect-name getter generate)
    (slot dialect-invoice getter generate)
    (slot requires getter generate)
    (slot exports getter generate)
    (slot imports getter generate)
    (slot inclusions accessors generate)
    (slot local-macros getter generate))
  (hub get-walker)
  (hub get-dialect-name)
  (hub get-dialect-invoice)
  (hub get-imports)
  (hub get-inclusions)
  (hub set-inclusions)
  (hub get-local-macros)
  (class Require-Invoice extends Object
    (slot name getter generate)
    (slot phase getter generate)
    (method override (print self output readably)))
  (hub get-phase)
  (class Module-Invoice extends Object
    (slot name getter generate)
    (slot module getter generate)
    (slot phase getter generate)
    (slot transformations getter generate)
    (method override (print self output readably)))
  (hub get-module)
  (hub get-transformations)
  (class Export-Invoice extends Module-Invoice
    (slot autoload getter generate)
    (slot symbols getter generate))
  (hub get-autoload)
  (hub get-symbols)
  (class Import-Invoice extends Module-Invoice
    (slot hit? getter generate))
  (hub get-hit?)
  (class Export-Declaration extends Declaration
    (slot symbol getter generate))
  (class Export-Syntax-Declaration extends Declaration
    (slot symbol getter generate))
  (class Autoload-Declaration extends Declaration
    (slot module getter generate)
    (slot exported-module getter generate)
    (slot declaration getter generate))
  (hub get-exported-module)
  (definition public *print-literal*)
  (class Literal-Class extends Class
    (method override (marshall-object self obj))
    (method override (unmarshall-object self content)))
  (class Literal metaclass Literal-Class extends Object
    (slot name getter generate)
    (slot arguments getter generate)
    (method override (initialize self name arguments))
    (method override (print self output readably))
    (method override (walk-references self proc)))
  (hub get-arguments)
  (native jazz:new-literal)
  (class Any extends Type)
  (class Macro-Declaration extends Declaration
    (slot signature getter generate)
    (slot body getter generate))
  (hub get-signature)
  (class Syntax-Declaration extends Declaration
    (slot signature getter generate)
    (slot body getter generate))
  (class Define-Syntax-Declaration extends Syntax-Declaration)
  (class Define-Local-Syntax-Declaration extends Syntax-Declaration)
  (class Void-Class extends Class)
  (class Void metaclass Void-Class extends Type)
  (class Opt-Type extends Type
    (slot type getter generate))
  (class Key-Type extends Type
    (slot key getter generate)
    (slot type getter generate))
  (hub get-key)
  (class Rest-Type extends Type
    (slot type getter generate))
  (class Function-Type extends Type
    (slot mandatory getter generate)
    (slot positional getter generate)
    (slot optional getter generate)
    (slot named getter generate)
    (slot rest getter generate)
    (slot result getter generate))
  (hub get-mandatory)
  (hub get-positional)
  (hub get-optional)
  (hub get-named)
  (hub get-rest)
  (hub get-result)
  (class Category-Type extends Type
    (slot declaration getter generate))
  (class Values-Type extends Type
    (slot types getter generate))
  (hub get-types)
  (class Restriction-Type extends Type
    (slot base getter generate)
    (slot type getter generate))
  (hub get-base)
  (class Complement-Type extends Type
    (slot type getter generate))
  (class Union-Type extends Type
    (slot types getter generate))
  (class Template-Type extends Type
    (slot class getter generate)
    (slot types getter generate))
  (hub get-class)
  (class Nillable-Type extends Type
    (slot type getter generate)
    (method override (print self output readably)))
  (class Dialect extends Object
    (method core virtual (dialect-walker self))
    (slot name getter generate)
    (slot declarations getter generate)
    (slot bindings getter generate))
  (hub dialect-walker)
  (hub get-declarations)
  (hub get-bindings)
  (class Backend extends Object
    (slot name getter generate)
    (slot bindings getter generate)
    (slot hook accessors generate))
  (hub get-hook)
  (hub set-hook)
  (class Walker extends Object
    (slot declarations getter generate)
    (slot bindings getter generate)
    (slot warnings getter generate)
    (slot errors getter generate)
    (slot literals getter generate)
    (slot variables getter generate)
    (slot statics getter generate)
    (slot exports getter generate)
    (slot references getter generate)
    (slot autoloads getter generate)
    (method core virtual (walker-declarations self))
    (method core virtual (walker-bindings self))
    (method core virtual (walk-form self resume declaration environment form))
    (method core virtual (walk-symbol self resume declaration environment symbol-src))
    (method core virtual (walk-symbol-assignment self resume declaration environment symbol-src value form-src))
    (method core virtual (validate-proclaim self resume declaration environment form-src))
    (method core virtual (runtime-export self declaration))
    (method core virtual (lookup-environment self resume declaration environment symbol-src symbol))
    (method core virtual (lookup-analyse self declaration symbol-src referenced-declaration)))
  (hub get-warnings)
  (hub get-errors)
  (hub get-literals)
  (hub get-variables)
  (hub get-statics)
  (hub get-references)
  (hub get-autoloads)
  (hub walker-declarations)
  (hub walker-bindings)
  (hub walk-form)
  (hub walk-symbol)
  (hub walk-symbol-assignment)
  (hub validate-proclaim)
  (hub runtime-export)
  (hub lookup-environment)
  (hub lookup-analyse)
  (native-syntax jazz:validate-access)
  (class Walk-Context extends Object
    (slot policy getter generate)
    (slot locator getter generate)
    (slot pathname getter generate)
    (slot proclaims getter generate))
  (hub get-policy)
  (hub get-pathname)
  (hub get-proclaims)
  (class Walk-Location-Class extends Class
    (method override (marshall-object self object))
    (method override (unmarshall-object self content)))
  (class Walk-Location extends Object
    (slot unit-locator getter generate)
    (slot declaration-locator getter generate)
    (slot locat getter generate)
    (slot path getter generate)
    (method override (initialize self unit-locator declaration-locator locat path))
    (method override (print self output readably)))
  (hub get-unit-locator)
  (hub get-declaration-locator)
  (hub get-locat)
  (hub get-path)
  (class Walk-Problem extends Error
    (slot location getter generate))
  (class Walk-Problems extends Error
    (slot warnings getter generate)
    (slot errors getter generate))
  (class Walk-Warning extends Walk-Problem)
  (class Walk-Error extends Walk-Problem)
  (class Unresolved-Error extends Walk-Error
    (slot symbol getter generate))
  (class Walk-Frame extends Walk-Binding
    (slot bindings getter generate))
  (class Signature extends Object
    (slot mandatory getter generate)
    (slot positional getter generate)
    (slot optional getter generate)
    (slot named getter generate)
    (slot rest getter generate)
    (slot expressions getter generate))
  (hub get-expressions)
  (class Symbol-Binding extends Lexical-Binding
    (slot gensym getter generate))
  (hub get-gensym)
  (class Variable extends Symbol-Binding
    (slot source getter generate)
    (slot specifier-source getter generate)
    (slot reference-count getter generate)
    (method override (initialize self name type source specifier-source)))
  (hub get-specifier-source)
  (hub get-reference-count)
  (class NextMethod-Variable extends Variable)
  (class Parameter extends Variable
    (method core virtual (emit-parameter self declaration walker resume environment)))
  (hub emit-parameter)
  (class Dynamic-Parameter extends Parameter
    (slot class getter generate))
  (class Optional-Parameter extends Parameter
    (slot default getter generate))
  (hub get-default)
  (class Named-Parameter extends Parameter
    (slot default getter generate))
  (class Rest-Parameter extends Parameter)
  (class Dynamic-Self-Binding extends Lexical-Binding
    (slot code getter generate))
  (hub get-code)
  (class Local-Variable-Binding extends Lexical-Binding
    (slot variable getter generate))
  (hub get-variable)
  (class Macro-Symbol extends Symbol-Binding
    (slot getter getter generate)
    (slot setter getter generate))
  (class Form-Binding extends Lexical-Binding)
  (class Special-Form extends Form-Binding
    (slot walk getter generate))
  (hub get-walk)
  (class Macro-Form extends Form-Binding
    (slot expander getter generate))
  (hub get-expander)
  (class Syntax-Form extends Form-Binding
    (slot expander getter generate))
  (class Define-Syntax-Form extends Syntax-Form
    (slot environment getter generate))
  (hub get-environment)
  (class Define-Local-Syntax-Form extends Syntax-Form
    (slot environment getter generate))
  (class Syntactic-Closure extends Object
    (slot environment getter generate)
    (slot variables getter generate)
    (slot expression getter generate)
    (slot form getter generate)
    (method override (print self output readably)))
  (hub get-expression)
  (hub get-form)
  (class Annotated-Variable extends Object
    (slot variable getter generate)
    (slot declared-type getter generate)
    (slot type getter generate)
    (method override (initialize self variable declared-type type))
    (method override (print self output readably)))
  (hub get-declared-type)
  (class Restricted-Binding extends Object
    (slot binding getter generate)
    (slot type getter generate))
  (hub get-binding)
  (class Annotated-Frame extends Object
    (slot variables getter generate)
    (slot public reset getter generate))
  (hub get-reset)
  (class Code extends Object
    (slot form getter generate)
    (slot type getter generate)
    (slot source getter generate))
  (class Expression extends Object
    (slot type getter generate)
    (slot source getter generate)
    (method override (initialize self . rest))
    (method core package virtual (emit-expression self declaration walker resume environment))
    (method core package virtual (emit-call self arguments arguments-codes declaration environment)))
  (hub emit-expression)
  (hub emit-call)
  (class Proclaim extends Expression
    (slot clauses getter generate))
  (hub get-clauses)
  (class Constant extends Expression
    (slot expansion getter generate)
    (method override (print self output readably)))
  (hub get-expansion)
  (class Delay extends Expression
    (slot expression getter generate))
  (class Quasiquote extends Expression
    (slot form getter generate)
    (slot expressions getter generate))
  (class Binding-Reference extends Expression
    (slot binding getter generate)
    (method override (print self output readably)))
  (class Assignment extends Expression
    (slot binding getter generate)
    (slot value getter generate)
    (slot symbol-source getter generate))
  (hub get-symbol-source)
  (class Lambda extends Expression
    (slot signature getter generate)
    (slot body getter generate))
  (class Let extends Expression
    (slot bindings getter generate)
    (slot body getter generate)
    (method override (initialize self bindings body)))
  (class Named-Let extends Let
    (slot variable getter generate))
  (class Letstar extends Expression
    (slot bindings getter generate)
    (slot body getter generate))
  (class Letrec extends Expression
    (slot bindings getter generate)
    (slot body getter generate))
  (class Receive extends Expression
    (slot variables getter generate)
    (slot expression getter generate)
    (slot body getter generate))
  (class Body extends Expression
    (slot internal-proclaims getter generate)
    (slot internal-defines getter generate)
    (slot expressions getter generate))
  (hub get-internal-proclaims)
  (hub get-internal-defines)
  (class Internal-Define extends Expression
    (slot variable getter generate)
    (slot value getter generate))
  (class Internal-Define-Variable extends Variable
    (slot signature getter generate))
  (class Begin extends Expression
    (slot expressions getter generate)
    (method override (initialize self expressions)))
  (class Do extends Expression
    (slot bindings getter generate)
    (slot test getter generate)
    (slot result getter generate)
    (slot body getter generate))
  (hub get-test)
  (class Call extends Expression
    (slot operator getter generate)
    (slot arguments getter generate))
  (hub get-operator)
  (class If extends Expression
    (slot test getter generate)
    (slot yes getter generate)
    (slot no getter generate))
  (hub get-yes)
  (hub get-no)
  (class Cond extends Expression
    (slot clauses getter generate))
  (class Case extends Expression
    (slot target getter generate)
    (slot clauses getter generate))
  (class And extends Expression
    (slot expressions getter generate))
  (class Or extends Expression
    (slot expressions getter generate))
  (class Declare extends Expression
    (slot declarations getter generate))
  (class Parameterize extends Expression
    (slot bindings getter generate)
    (slot body getter generate))
  (class Unspecific extends Expression
    (slot expressions getter generate))
  (class Analysis-Data extends Object
    (slot autoload-reference getter generate)
    (slot declaration-references getter generate))
  (hub get-autoload-reference)
  (hub get-declaration-references)
  (class Foundation-Dialect extends Dialect)
  (class Foundation-Walker extends Walker)
  (class Define-Declaration extends Declaration
    (slot signature getter generate)
    (slot specifier-source getter generate)
    (slot value getter generate))
  (class Define-Special-Form-Declaration extends Declaration
    (slot signature getter generate)
    (slot body getter generate))
  (class Define-Macro-Declaration extends Declaration
    (slot signature getter generate)
    (slot body getter generate))
  (class Scheme-Dialect extends Dialect)
  (class Scheme-Walker extends Walker)
  (class Definition-Declaration extends Declaration
    (slot expansion getter generate)
    (slot signature getter generate)
    (slot specifier-source getter generate)
    (slot value getter generate)
    (method override (initialize self . rest)))
  (class Specialize extends Expression)
  (class Generic-Declaration extends Declaration
    (slot dispatch-types getter generate)
    (slot signature getter generate)
    (slot body getter generate))
  (hub get-dispatch-types)
  (class Specific-Declaration extends Declaration
    (slot generic getter generate)
    (slot signature getter generate)
    (slot body getter generate)
    (slot root? getter generate))
  (hub get-generic)
  (hub get-root?)
  (class Category-Declaration extends Namespace-Declaration
    (slot implementor getter generate)
    (slot metaclass getter generate)
    (slot metaclass-explicit? getter generate))
  (hub get-implementor)
  (hub get-metaclass)
  (hub get-metaclass-explicit?)
  (class Class-Declaration extends Category-Declaration
    (slot ascendant getter generate)
    (slot ascendant-relation getter generate)
    (slot ascendant-base getter generate)
    (slot interfaces getter generate))
  (hub get-ascendant-relation)
  (hub get-ascendant-base)
  (class Interface-Declaration extends Category-Declaration
    (slot ascendants getter generate))
  (class Field-Declaration extends Declaration)
  (class Slot-Declaration extends Field-Declaration
    (slot specifier-source getter generate)
    (slot initialize getter generate)
    (slot getter-name getter generate)
    (slot setter-name getter generate)
    (slot getter-generation getter generate)
    (slot setter-generation getter generate)
    (slot dynamic? getter generate))
  (hub get-getter-name)
  (hub get-setter-name)
  (hub get-getter-generation)
  (hub get-setter-generation)
  (hub get-dynamic?)
  (class Property-Declaration extends Slot-Declaration
    (slot getter getter generate)
    (slot setter getter generate))
  (class Method-Declaration extends Field-Declaration
    (slot root getter generate)
    (slot propagation getter generate)
    (slot abstraction getter generate)
    (slot expansion getter generate)
    (slot remote getter generate)
    (slot synchronized getter generate)
    (slot signature getter generate)
    (slot specifier-source getter generate)
    (slot body getter generate))
  (hub get-root)
  (hub get-propagation)
  (hub get-abstraction)
  (hub get-remote)
  (hub get-synchronized)
  (class Hub-Declaration extends Declaration
    (slot hubs getter generate)
    (slot nodes getter generate))
  (hub get-hubs)
  (hub get-nodes)
  (class With-Self extends Expression
    (slot body getter generate))
  (class With-Dynamic-Self extends Expression
    (slot code getter generate)
    (slot body getter generate))
  (class Cast extends Expression
    (slot expression getter generate))
  (class Allocate extends Expression
    (slot class getter generate)
    (slot values getter generate))
  (hub get-values)
  (class Jazz-Dialect extends Dialect)
  (class Jazz-Walker extends Scheme-Walker))
