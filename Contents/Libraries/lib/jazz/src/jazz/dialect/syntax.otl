(module jazz.dialect.syntax scheme
  (export (scheme.syntax))
  (import (scheme.syntax-rules (phase syntax)))
  (import (gambit (only bitwise-ior open-output-string get-output-string string->keyword)))
  (import (jazz.dialect.kernel))
  (native private jazz:->string)
  (native private jazz:error)
  (native private jazz:getf)
  (native private jazz:last-tail)
  (native private jazz:last)
  (native private jazz:butlast)
  (native private jazz:naturals)
  (native private jazz:current-declaration)
  (native private jazz:current-declaration-name)
  (native private jazz:system-format)
  (syntax public assert)
  (syntax public assertion)
  (syntax public allege)
  (syntax public debug-assert)
  (syntax public debug-assertion)
  (syntax public bind)
  (syntax public bind-vector)
  (syntax public bind-values)
  (syntax public bind-optionals)
  (syntax public bind-keywords)
  (syntax public ecase)
  (syntax public nucase)
  (syntax public enumeration)
  (syntax public increase!)
  (syntax public decrease!)
  (syntax public multiply!)
  (syntax public divide!)
  (syntax public bitwise-ior!)
  (syntax public typecase)
  (syntax public with)
  (syntax public submodule)
  (syntax public constant)
  (syntax public expand-body)
  (syntax public when)
  (syntax public unless)
  (syntax public prog1)
  (syntax public while)
  (syntax public unlikely)
  (syntax public unwind-protect)
  (syntax public catch)
  (syntax public jazzdoc)
  (syntax public ~)
  (syntax public local-context))
